[
  {
    "settings": {
      "model_id": "turboae-approximated-nonsys_basic_2022-01-05.18-10-02",
      "block_len": 100,
      "batch_size": 10000,
      "write_results_to_log": true,
      "logdir": "./test_logs/",
      "tzname": "America/Chicago",
      "write_to_tensorboard": true,
      "tensorboard_dir": "./tensorboard/testing/",
      "verbose": 1
    },
    "encoder_decoder": {
      "noninterleaved_code": {
        "trellis": {
          "state_transitions": {
            "next_states": [
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15],
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15]
            ],
            "previous_states": [
              [[0, 0], [8, 0]],
              [[0, 1], [8, 1]],
              [[1, 0], [9, 0]],
              [[1, 1], [9, 1]],
              [[2, 0], [10, 0]],
              [[2, 1], [10, 1]],
              [[3, 0], [11, 0]],
              [[3, 1], [11, 1]],
              [[4, 0], [12, 0]],
              [[4, 1], [12, 1]],
              [[5, 0], [13, 0]],
              [[5, 1], [13, 1]],
              [[6, 0], [14, 0]],
              [[6, 1], [14, 1]],
              [[7, 0], [15, 0]],
              [[7, 1], [15, 1]]
            ]
          },
          "output_table": [
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]],
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]],
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]]
          ]
        },
        "num_states": 16,
        "num_inputs": 2,
        "num_input_channels": 1,
        "num_output_channels": 2,
        "normalize_output_table": false,
        "name": "AffineConvolutionalCode"
      },
      "interleaved_code": {
        "trellis": {
          "state_transitions": {
            "next_states": [
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15],
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15]
            ],
            "previous_states": [
              [[0, 0], [8, 0]],
              [[0, 1], [8, 1]],
              [[1, 0], [9, 0]],
              [[1, 1], [9, 1]],
              [[2, 0], [10, 0]],
              [[2, 1], [10, 1]],
              [[3, 0], [11, 0]],
              [[3, 1], [11, 1]],
              [[4, 0], [12, 0]],
              [[4, 1], [12, 1]],
              [[5, 0], [13, 0]],
              [[5, 1], [13, 1]],
              [[6, 0], [14, 0]],
              [[6, 1], [14, 1]],
              [[7, 0], [15, 0]],
              [[7, 1], [15, 1]]
            ]
          },
          "output_table": [
            [[1], [0]],
            [[0], [1]],
            [[0], [1]],
            [[1], [0]],
            [[0], [1]],
            [[1], [0]],
            [[1], [0]],
            [[0], [1]],
            [[1], [0]],
            [[0], [1]],
            [[0], [1]],
            [[1], [0]],
            [[0], [1]],
            [[1], [0]],
            [[1], [0]],
            [[0], [1]]
          ]
        },
        "num_states": 16,
        "num_inputs": 2,
        "num_input_channels": 1,
        "num_output_channels": 1,
        "normalize_output_table": false,
        "name": "AffineConvolutionalCode"
      },
      "interleaver": {"block_len": 100, "name": "RandomPermuteInterleaver"},
      "channel": {
        "sigma": 1.4125375446227544,
        "good_sigma": 1.2589254117941673,
        "bad_sigma": 1.5848931924611136,
        "snr": -3,
        "good_snr": -2,
        "bad_snr": -4,
        "p_gb": 0.8,
        "p_bg": 0.8,
        "block_len": 100,
        "name": "NonIIDMarkovianGaussianAsAWGN"
      },
      "decoder": {
        "decoder1": {
          "trellis_code": {
            "trellis": {
              "state_transitions": {
                "next_states": [
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15],
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15]
                ],
                "previous_states": [
                  [[0, 0], [8, 0]],
                  [[0, 1], [8, 1]],
                  [[1, 0], [9, 0]],
                  [[1, 1], [9, 1]],
                  [[2, 0], [10, 0]],
                  [[2, 1], [10, 1]],
                  [[3, 0], [11, 0]],
                  [[3, 1], [11, 1]],
                  [[4, 0], [12, 0]],
                  [[4, 1], [12, 1]],
                  [[5, 0], [13, 0]],
                  [[5, 1], [13, 1]],
                  [[6, 0], [14, 0]],
                  [[6, 1], [14, 1]],
                  [[7, 0], [15, 0]],
                  [[7, 1], [15, 1]]
                ]
              },
              "output_table": [
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]],
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]],
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]]
              ]
            },
            "num_states": 16,
            "num_inputs": 2,
            "num_input_channels": 1,
            "num_output_channels": 2,
            "normalize_output_table": false,
            "name": "AffineConvolutionalCode"
          },
          "channel": {
            "sigma": 1.4125375446227544,
            "good_sigma": 1.2589254117941673,
            "bad_sigma": 1.5848931924611136,
            "snr": -3,
            "good_snr": -2,
            "bad_snr": -4,
            "p_gb": 0.8,
            "p_bg": 0.8,
            "block_len": 100,
            "name": "NonIIDMarkovianGaussianAsAWGN"
          },
          "use_max": false,
          "num_input_channels": 2,
          "num_output_channels": 1,
          "name": "BCJRDecoder"
        },
        "decoder2": {
          "trellis_code": {
            "trellis": {
              "state_transitions": {
                "next_states": [
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15],
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15]
                ],
                "previous_states": [
                  [[0, 0], [8, 0]],
                  [[0, 1], [8, 1]],
                  [[1, 0], [9, 0]],
                  [[1, 1], [9, 1]],
                  [[2, 0], [10, 0]],
                  [[2, 1], [10, 1]],
                  [[3, 0], [11, 0]],
                  [[3, 1], [11, 1]],
                  [[4, 0], [12, 0]],
                  [[4, 1], [12, 1]],
                  [[5, 0], [13, 0]],
                  [[5, 1], [13, 1]],
                  [[6, 0], [14, 0]],
                  [[6, 1], [14, 1]],
                  [[7, 0], [15, 0]],
                  [[7, 1], [15, 1]]
                ]
              },
              "output_table": [
                [[1], [0]],
                [[0], [1]],
                [[0], [1]],
                [[1], [0]],
                [[0], [1]],
                [[1], [0]],
                [[1], [0]],
                [[0], [1]],
                [[1], [0]],
                [[0], [1]],
                [[0], [1]],
                [[1], [0]],
                [[0], [1]],
                [[1], [0]],
                [[1], [0]],
                [[0], [1]]
              ]
            },
            "num_states": 16,
            "num_inputs": 2,
            "num_input_channels": 1,
            "num_output_channels": 1,
            "normalize_output_table": false,
            "name": "AffineConvolutionalCode"
          },
          "channel": {
            "sigma": 1.4125375446227544,
            "good_sigma": 1.2589254117941673,
            "bad_sigma": 1.5848931924611136,
            "snr": -3,
            "good_snr": -2,
            "bad_snr": -4,
            "p_gb": 0.8,
            "p_bg": 0.8,
            "block_len": 100,
            "name": "NonIIDMarkovianGaussianAsAWGN"
          },
          "use_max": false,
          "num_input_channels": 1,
          "num_output_channels": 1,
          "name": "BCJRDecoder"
        },
        "interleaver": {"block_len": 100, "name": "RandomPermuteInterleaver"},
        "num_iter": 6,
        "num_noninterleaved_streams": 2,
        "num_input_channels": 3,
        "num_output_channels": 1,
        "name": "TurboDecoder"
      },
      "rate": [1, 3],
      "block_len": 100,
      "use_max": false,
      "num_iter": 6,
      "name": "turboae-approximated-nonsys_basic"
    },
    "steps": 100,
    "scores": {
      "ber_mean": 0.24581481516361237,
      "ber_var": 0.015248637646436691,
      "bler_mean": 0.9712329506874084,
      "bler_var": 0.027939477935433388,
      "cross_entropy_mean": 0.4936390221118927,
      "cross_entropy_var": 0.37250375747680664,
      "encoded_mean": 0.4999910295009613,
      "encoded_var": 0.25
    }
  },
  {
    "settings": {
      "model_id": "turboae-approximated-nonsys_basic_2022-01-05.18-10-02",
      "block_len": 100,
      "batch_size": 10000,
      "write_results_to_log": true,
      "logdir": "./test_logs/",
      "tzname": "America/Chicago",
      "write_to_tensorboard": true,
      "tensorboard_dir": "./tensorboard/testing/",
      "verbose": 1
    },
    "encoder_decoder": {
      "noninterleaved_code": {
        "trellis": {
          "state_transitions": {
            "next_states": [
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15],
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15]
            ],
            "previous_states": [
              [[0, 0], [8, 0]],
              [[0, 1], [8, 1]],
              [[1, 0], [9, 0]],
              [[1, 1], [9, 1]],
              [[2, 0], [10, 0]],
              [[2, 1], [10, 1]],
              [[3, 0], [11, 0]],
              [[3, 1], [11, 1]],
              [[4, 0], [12, 0]],
              [[4, 1], [12, 1]],
              [[5, 0], [13, 0]],
              [[5, 1], [13, 1]],
              [[6, 0], [14, 0]],
              [[6, 1], [14, 1]],
              [[7, 0], [15, 0]],
              [[7, 1], [15, 1]]
            ]
          },
          "output_table": [
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]],
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]],
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]]
          ]
        },
        "num_states": 16,
        "num_inputs": 2,
        "num_input_channels": 1,
        "num_output_channels": 2,
        "normalize_output_table": false,
        "name": "AffineConvolutionalCode"
      },
      "interleaved_code": {
        "trellis": {
          "state_transitions": {
            "next_states": [
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15],
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15]
            ],
            "previous_states": [
              [[0, 0], [8, 0]],
              [[0, 1], [8, 1]],
              [[1, 0], [9, 0]],
              [[1, 1], [9, 1]],
              [[2, 0], [10, 0]],
              [[2, 1], [10, 1]],
              [[3, 0], [11, 0]],
              [[3, 1], [11, 1]],
              [[4, 0], [12, 0]],
              [[4, 1], [12, 1]],
              [[5, 0], [13, 0]],
              [[5, 1], [13, 1]],
              [[6, 0], [14, 0]],
              [[6, 1], [14, 1]],
              [[7, 0], [15, 0]],
              [[7, 1], [15, 1]]
            ]
          },
          "output_table": [
            [[1], [0]],
            [[0], [1]],
            [[0], [1]],
            [[1], [0]],
            [[0], [1]],
            [[1], [0]],
            [[1], [0]],
            [[0], [1]],
            [[1], [0]],
            [[0], [1]],
            [[0], [1]],
            [[1], [0]],
            [[0], [1]],
            [[1], [0]],
            [[1], [0]],
            [[0], [1]]
          ]
        },
        "num_states": 16,
        "num_inputs": 2,
        "num_input_channels": 1,
        "num_output_channels": 1,
        "normalize_output_table": false,
        "name": "AffineConvolutionalCode"
      },
      "interleaver": {"block_len": 100, "name": "RandomPermuteInterleaver"},
      "channel": {
        "sigma": 1.333521432163324,
        "good_sigma": 1.1885022274370183,
        "bad_sigma": 1.4962356560944334,
        "snr": -2.4999999999999996,
        "good_snr": -1.4999999999999996,
        "bad_snr": -3.4999999999999996,
        "p_gb": 0.8,
        "p_bg": 0.8,
        "block_len": 100,
        "name": "NonIIDMarkovianGaussianAsAWGN"
      },
      "decoder": {
        "decoder1": {
          "trellis_code": {
            "trellis": {
              "state_transitions": {
                "next_states": [
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15],
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15]
                ],
                "previous_states": [
                  [[0, 0], [8, 0]],
                  [[0, 1], [8, 1]],
                  [[1, 0], [9, 0]],
                  [[1, 1], [9, 1]],
                  [[2, 0], [10, 0]],
                  [[2, 1], [10, 1]],
                  [[3, 0], [11, 0]],
                  [[3, 1], [11, 1]],
                  [[4, 0], [12, 0]],
                  [[4, 1], [12, 1]],
                  [[5, 0], [13, 0]],
                  [[5, 1], [13, 1]],
                  [[6, 0], [14, 0]],
                  [[6, 1], [14, 1]],
                  [[7, 0], [15, 0]],
                  [[7, 1], [15, 1]]
                ]
              },
              "output_table": [
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]],
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]],
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]]
              ]
            },
            "num_states": 16,
            "num_inputs": 2,
            "num_input_channels": 1,
            "num_output_channels": 2,
            "normalize_output_table": false,
            "name": "AffineConvolutionalCode"
          },
          "channel": {
            "sigma": 1.333521432163324,
            "good_sigma": 1.1885022274370183,
            "bad_sigma": 1.4962356560944334,
            "snr": -2.4999999999999996,
            "good_snr": -1.4999999999999996,
            "bad_snr": -3.4999999999999996,
            "p_gb": 0.8,
            "p_bg": 0.8,
            "block_len": 100,
            "name": "NonIIDMarkovianGaussianAsAWGN"
          },
          "use_max": false,
          "num_input_channels": 2,
          "num_output_channels": 1,
          "name": "BCJRDecoder"
        },
        "decoder2": {
          "trellis_code": {
            "trellis": {
              "state_transitions": {
                "next_states": [
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15],
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15]
                ],
                "previous_states": [
                  [[0, 0], [8, 0]],
                  [[0, 1], [8, 1]],
                  [[1, 0], [9, 0]],
                  [[1, 1], [9, 1]],
                  [[2, 0], [10, 0]],
                  [[2, 1], [10, 1]],
                  [[3, 0], [11, 0]],
                  [[3, 1], [11, 1]],
                  [[4, 0], [12, 0]],
                  [[4, 1], [12, 1]],
                  [[5, 0], [13, 0]],
                  [[5, 1], [13, 1]],
                  [[6, 0], [14, 0]],
                  [[6, 1], [14, 1]],
                  [[7, 0], [15, 0]],
                  [[7, 1], [15, 1]]
                ]
              },
              "output_table": [
                [[1], [0]],
                [[0], [1]],
                [[0], [1]],
                [[1], [0]],
                [[0], [1]],
                [[1], [0]],
                [[1], [0]],
                [[0], [1]],
                [[1], [0]],
                [[0], [1]],
                [[0], [1]],
                [[1], [0]],
                [[0], [1]],
                [[1], [0]],
                [[1], [0]],
                [[0], [1]]
              ]
            },
            "num_states": 16,
            "num_inputs": 2,
            "num_input_channels": 1,
            "num_output_channels": 1,
            "normalize_output_table": false,
            "name": "AffineConvolutionalCode"
          },
          "channel": {
            "sigma": 1.333521432163324,
            "good_sigma": 1.1885022274370183,
            "bad_sigma": 1.4962356560944334,
            "snr": -2.4999999999999996,
            "good_snr": -1.4999999999999996,
            "bad_snr": -3.4999999999999996,
            "p_gb": 0.8,
            "p_bg": 0.8,
            "block_len": 100,
            "name": "NonIIDMarkovianGaussianAsAWGN"
          },
          "use_max": false,
          "num_input_channels": 1,
          "num_output_channels": 1,
          "name": "BCJRDecoder"
        },
        "interleaver": {"block_len": 100, "name": "RandomPermuteInterleaver"},
        "num_iter": 6,
        "num_noninterleaved_streams": 2,
        "num_input_channels": 3,
        "num_output_channels": 1,
        "name": "TurboDecoder"
      },
      "rate": [1, 3],
      "block_len": 100,
      "use_max": false,
      "num_iter": 6,
      "name": "turboae-approximated-nonsys_basic"
    },
    "steps": 100,
    "scores": {
      "ber_mean": 0.1871608942747116,
      "ber_var": 0.018129659816622734,
      "bler_mean": 0.9031330347061157,
      "bler_var": 0.08748387545347214,
      "cross_entropy_mean": 0.401693731546402,
      "cross_entropy_var": 0.4744410812854767,
      "encoded_mean": 0.5000127553939819,
      "encoded_var": 0.25
    }
  },
  {
    "settings": {
      "model_id": "turboae-approximated-nonsys_basic_2022-01-05.18-10-02",
      "block_len": 100,
      "batch_size": 10000,
      "write_results_to_log": true,
      "logdir": "./test_logs/",
      "tzname": "America/Chicago",
      "write_to_tensorboard": true,
      "tensorboard_dir": "./tensorboard/testing/",
      "verbose": 1
    },
    "encoder_decoder": {
      "noninterleaved_code": {
        "trellis": {
          "state_transitions": {
            "next_states": [
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15],
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15]
            ],
            "previous_states": [
              [[0, 0], [8, 0]],
              [[0, 1], [8, 1]],
              [[1, 0], [9, 0]],
              [[1, 1], [9, 1]],
              [[2, 0], [10, 0]],
              [[2, 1], [10, 1]],
              [[3, 0], [11, 0]],
              [[3, 1], [11, 1]],
              [[4, 0], [12, 0]],
              [[4, 1], [12, 1]],
              [[5, 0], [13, 0]],
              [[5, 1], [13, 1]],
              [[6, 0], [14, 0]],
              [[6, 1], [14, 1]],
              [[7, 0], [15, 0]],
              [[7, 1], [15, 1]]
            ]
          },
          "output_table": [
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]],
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]],
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]]
          ]
        },
        "num_states": 16,
        "num_inputs": 2,
        "num_input_channels": 1,
        "num_output_channels": 2,
        "normalize_output_table": false,
        "name": "AffineConvolutionalCode"
      },
      "interleaved_code": {
        "trellis": {
          "state_transitions": {
            "next_states": [
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15],
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15]
            ],
            "previous_states": [
              [[0, 0], [8, 0]],
              [[0, 1], [8, 1]],
              [[1, 0], [9, 0]],
              [[1, 1], [9, 1]],
              [[2, 0], [10, 0]],
              [[2, 1], [10, 1]],
              [[3, 0], [11, 0]],
              [[3, 1], [11, 1]],
              [[4, 0], [12, 0]],
              [[4, 1], [12, 1]],
              [[5, 0], [13, 0]],
              [[5, 1], [13, 1]],
              [[6, 0], [14, 0]],
              [[6, 1], [14, 1]],
              [[7, 0], [15, 0]],
              [[7, 1], [15, 1]]
            ]
          },
          "output_table": [
            [[1], [0]],
            [[0], [1]],
            [[0], [1]],
            [[1], [0]],
            [[0], [1]],
            [[1], [0]],
            [[1], [0]],
            [[0], [1]],
            [[1], [0]],
            [[0], [1]],
            [[0], [1]],
            [[1], [0]],
            [[0], [1]],
            [[1], [0]],
            [[1], [0]],
            [[0], [1]]
          ]
        },
        "num_states": 16,
        "num_inputs": 2,
        "num_input_channels": 1,
        "num_output_channels": 1,
        "normalize_output_table": false,
        "name": "AffineConvolutionalCode"
      },
      "interleaver": {"block_len": 100, "name": "RandomPermuteInterleaver"},
      "channel": {
        "sigma": 1.2589254117941673,
        "good_sigma": 1.1220184543019636,
        "bad_sigma": 1.4125375446227544,
        "snr": -2,
        "good_snr": -1,
        "bad_snr": -3,
        "p_gb": 0.8,
        "p_bg": 0.8,
        "block_len": 100,
        "name": "NonIIDMarkovianGaussianAsAWGN"
      },
      "decoder": {
        "decoder1": {
          "trellis_code": {
            "trellis": {
              "state_transitions": {
                "next_states": [
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15],
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15]
                ],
                "previous_states": [
                  [[0, 0], [8, 0]],
                  [[0, 1], [8, 1]],
                  [[1, 0], [9, 0]],
                  [[1, 1], [9, 1]],
                  [[2, 0], [10, 0]],
                  [[2, 1], [10, 1]],
                  [[3, 0], [11, 0]],
                  [[3, 1], [11, 1]],
                  [[4, 0], [12, 0]],
                  [[4, 1], [12, 1]],
                  [[5, 0], [13, 0]],
                  [[5, 1], [13, 1]],
                  [[6, 0], [14, 0]],
                  [[6, 1], [14, 1]],
                  [[7, 0], [15, 0]],
                  [[7, 1], [15, 1]]
                ]
              },
              "output_table": [
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]],
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]],
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]]
              ]
            },
            "num_states": 16,
            "num_inputs": 2,
            "num_input_channels": 1,
            "num_output_channels": 2,
            "normalize_output_table": false,
            "name": "AffineConvolutionalCode"
          },
          "channel": {
            "sigma": 1.2589254117941673,
            "good_sigma": 1.1220184543019636,
            "bad_sigma": 1.4125375446227544,
            "snr": -2,
            "good_snr": -1,
            "bad_snr": -3,
            "p_gb": 0.8,
            "p_bg": 0.8,
            "block_len": 100,
            "name": "NonIIDMarkovianGaussianAsAWGN"
          },
          "use_max": false,
          "num_input_channels": 2,
          "num_output_channels": 1,
          "name": "BCJRDecoder"
        },
        "decoder2": {
          "trellis_code": {
            "trellis": {
              "state_transitions": {
                "next_states": [
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15],
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15]
                ],
                "previous_states": [
                  [[0, 0], [8, 0]],
                  [[0, 1], [8, 1]],
                  [[1, 0], [9, 0]],
                  [[1, 1], [9, 1]],
                  [[2, 0], [10, 0]],
                  [[2, 1], [10, 1]],
                  [[3, 0], [11, 0]],
                  [[3, 1], [11, 1]],
                  [[4, 0], [12, 0]],
                  [[4, 1], [12, 1]],
                  [[5, 0], [13, 0]],
                  [[5, 1], [13, 1]],
                  [[6, 0], [14, 0]],
                  [[6, 1], [14, 1]],
                  [[7, 0], [15, 0]],
                  [[7, 1], [15, 1]]
                ]
              },
              "output_table": [
                [[1], [0]],
                [[0], [1]],
                [[0], [1]],
                [[1], [0]],
                [[0], [1]],
                [[1], [0]],
                [[1], [0]],
                [[0], [1]],
                [[1], [0]],
                [[0], [1]],
                [[0], [1]],
                [[1], [0]],
                [[0], [1]],
                [[1], [0]],
                [[1], [0]],
                [[0], [1]]
              ]
            },
            "num_states": 16,
            "num_inputs": 2,
            "num_input_channels": 1,
            "num_output_channels": 1,
            "normalize_output_table": false,
            "name": "AffineConvolutionalCode"
          },
          "channel": {
            "sigma": 1.2589254117941673,
            "good_sigma": 1.1220184543019636,
            "bad_sigma": 1.4125375446227544,
            "snr": -2,
            "good_snr": -1,
            "bad_snr": -3,
            "p_gb": 0.8,
            "p_bg": 0.8,
            "block_len": 100,
            "name": "NonIIDMarkovianGaussianAsAWGN"
          },
          "use_max": false,
          "num_input_channels": 1,
          "num_output_channels": 1,
          "name": "BCJRDecoder"
        },
        "interleaver": {"block_len": 100, "name": "RandomPermuteInterleaver"},
        "num_iter": 6,
        "num_noninterleaved_streams": 2,
        "num_input_channels": 3,
        "num_output_channels": 1,
        "name": "TurboDecoder"
      },
      "rate": [1, 3],
      "block_len": 100,
      "use_max": false,
      "num_iter": 6,
      "name": "turboae-approximated-nonsys_basic"
    },
    "steps": 100,
    "scores": {
      "ber_mean": 0.12459999322891235,
      "ber_var": 0.016977526247501373,
      "bler_mean": 0.7628908753395081,
      "bler_var": 0.18088845908641815,
      "cross_entropy_mean": 0.2887527346611023,
      "cross_entropy_var": 0.5129658579826355,
      "encoded_mean": 0.500003457069397,
      "encoded_var": 0.2499999701976776
    }
  },
  {
    "settings": {
      "model_id": "turboae-approximated-nonsys_basic_2022-01-05.18-10-02",
      "block_len": 100,
      "batch_size": 10000,
      "write_results_to_log": true,
      "logdir": "./test_logs/",
      "tzname": "America/Chicago",
      "write_to_tensorboard": true,
      "tensorboard_dir": "./tensorboard/testing/",
      "verbose": 1
    },
    "encoder_decoder": {
      "noninterleaved_code": {
        "trellis": {
          "state_transitions": {
            "next_states": [
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15],
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15]
            ],
            "previous_states": [
              [[0, 0], [8, 0]],
              [[0, 1], [8, 1]],
              [[1, 0], [9, 0]],
              [[1, 1], [9, 1]],
              [[2, 0], [10, 0]],
              [[2, 1], [10, 1]],
              [[3, 0], [11, 0]],
              [[3, 1], [11, 1]],
              [[4, 0], [12, 0]],
              [[4, 1], [12, 1]],
              [[5, 0], [13, 0]],
              [[5, 1], [13, 1]],
              [[6, 0], [14, 0]],
              [[6, 1], [14, 1]],
              [[7, 0], [15, 0]],
              [[7, 1], [15, 1]]
            ]
          },
          "output_table": [
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]],
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]],
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]]
          ]
        },
        "num_states": 16,
        "num_inputs": 2,
        "num_input_channels": 1,
        "num_output_channels": 2,
        "normalize_output_table": false,
        "name": "AffineConvolutionalCode"
      },
      "interleaved_code": {
        "trellis": {
          "state_transitions": {
            "next_states": [
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15],
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15]
            ],
            "previous_states": [
              [[0, 0], [8, 0]],
              [[0, 1], [8, 1]],
              [[1, 0], [9, 0]],
              [[1, 1], [9, 1]],
              [[2, 0], [10, 0]],
              [[2, 1], [10, 1]],
              [[3, 0], [11, 0]],
              [[3, 1], [11, 1]],
              [[4, 0], [12, 0]],
              [[4, 1], [12, 1]],
              [[5, 0], [13, 0]],
              [[5, 1], [13, 1]],
              [[6, 0], [14, 0]],
              [[6, 1], [14, 1]],
              [[7, 0], [15, 0]],
              [[7, 1], [15, 1]]
            ]
          },
          "output_table": [
            [[1], [0]],
            [[0], [1]],
            [[0], [1]],
            [[1], [0]],
            [[0], [1]],
            [[1], [0]],
            [[1], [0]],
            [[0], [1]],
            [[1], [0]],
            [[0], [1]],
            [[0], [1]],
            [[1], [0]],
            [[0], [1]],
            [[1], [0]],
            [[1], [0]],
            [[0], [1]]
          ]
        },
        "num_states": 16,
        "num_inputs": 2,
        "num_input_channels": 1,
        "num_output_channels": 1,
        "normalize_output_table": false,
        "name": "AffineConvolutionalCode"
      },
      "interleaver": {"block_len": 100, "name": "RandomPermuteInterleaver"},
      "channel": {
        "sigma": 1.1885022274370185,
        "good_sigma": 1.0592537251772889,
        "bad_sigma": 1.333521432163324,
        "snr": -1.5000000000000002,
        "good_snr": -0.5000000000000002,
        "bad_snr": -2.5,
        "p_gb": 0.8,
        "p_bg": 0.8,
        "block_len": 100,
        "name": "NonIIDMarkovianGaussianAsAWGN"
      },
      "decoder": {
        "decoder1": {
          "trellis_code": {
            "trellis": {
              "state_transitions": {
                "next_states": [
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15],
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15]
                ],
                "previous_states": [
                  [[0, 0], [8, 0]],
                  [[0, 1], [8, 1]],
                  [[1, 0], [9, 0]],
                  [[1, 1], [9, 1]],
                  [[2, 0], [10, 0]],
                  [[2, 1], [10, 1]],
                  [[3, 0], [11, 0]],
                  [[3, 1], [11, 1]],
                  [[4, 0], [12, 0]],
                  [[4, 1], [12, 1]],
                  [[5, 0], [13, 0]],
                  [[5, 1], [13, 1]],
                  [[6, 0], [14, 0]],
                  [[6, 1], [14, 1]],
                  [[7, 0], [15, 0]],
                  [[7, 1], [15, 1]]
                ]
              },
              "output_table": [
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]],
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]],
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]]
              ]
            },
            "num_states": 16,
            "num_inputs": 2,
            "num_input_channels": 1,
            "num_output_channels": 2,
            "normalize_output_table": false,
            "name": "AffineConvolutionalCode"
          },
          "channel": {
            "sigma": 1.1885022274370185,
            "good_sigma": 1.0592537251772889,
            "bad_sigma": 1.333521432163324,
            "snr": -1.5000000000000002,
            "good_snr": -0.5000000000000002,
            "bad_snr": -2.5,
            "p_gb": 0.8,
            "p_bg": 0.8,
            "block_len": 100,
            "name": "NonIIDMarkovianGaussianAsAWGN"
          },
          "use_max": false,
          "num_input_channels": 2,
          "num_output_channels": 1,
          "name": "BCJRDecoder"
        },
        "decoder2": {
          "trellis_code": {
            "trellis": {
              "state_transitions": {
                "next_states": [
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15],
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15]
                ],
                "previous_states": [
                  [[0, 0], [8, 0]],
                  [[0, 1], [8, 1]],
                  [[1, 0], [9, 0]],
                  [[1, 1], [9, 1]],
                  [[2, 0], [10, 0]],
                  [[2, 1], [10, 1]],
                  [[3, 0], [11, 0]],
                  [[3, 1], [11, 1]],
                  [[4, 0], [12, 0]],
                  [[4, 1], [12, 1]],
                  [[5, 0], [13, 0]],
                  [[5, 1], [13, 1]],
                  [[6, 0], [14, 0]],
                  [[6, 1], [14, 1]],
                  [[7, 0], [15, 0]],
                  [[7, 1], [15, 1]]
                ]
              },
              "output_table": [
                [[1], [0]],
                [[0], [1]],
                [[0], [1]],
                [[1], [0]],
                [[0], [1]],
                [[1], [0]],
                [[1], [0]],
                [[0], [1]],
                [[1], [0]],
                [[0], [1]],
                [[0], [1]],
                [[1], [0]],
                [[0], [1]],
                [[1], [0]],
                [[1], [0]],
                [[0], [1]]
              ]
            },
            "num_states": 16,
            "num_inputs": 2,
            "num_input_channels": 1,
            "num_output_channels": 1,
            "normalize_output_table": false,
            "name": "AffineConvolutionalCode"
          },
          "channel": {
            "sigma": 1.1885022274370185,
            "good_sigma": 1.0592537251772889,
            "bad_sigma": 1.333521432163324,
            "snr": -1.5000000000000002,
            "good_snr": -0.5000000000000002,
            "bad_snr": -2.5,
            "p_gb": 0.8,
            "p_bg": 0.8,
            "block_len": 100,
            "name": "NonIIDMarkovianGaussianAsAWGN"
          },
          "use_max": false,
          "num_input_channels": 1,
          "num_output_channels": 1,
          "name": "BCJRDecoder"
        },
        "interleaver": {"block_len": 100, "name": "RandomPermuteInterleaver"},
        "num_iter": 6,
        "num_noninterleaved_streams": 2,
        "num_input_channels": 3,
        "num_output_channels": 1,
        "name": "TurboDecoder"
      },
      "rate": [1, 3],
      "block_len": 100,
      "use_max": false,
      "num_iter": 6,
      "name": "turboae-approximated-nonsys_basic"
    },
    "steps": 100,
    "scores": {
      "ber_mean": 0.0689769834280014,
      "ber_var": 0.01162643451243639,
      "bler_mean": 0.5593780875205994,
      "bler_var": 0.24647444486618042,
      "cross_entropy_mean": 0.17510227859020233,
      "cross_entropy_var": 0.4463263154029846,
      "encoded_mean": 0.5000011324882507,
      "encoded_var": 0.25
    }
  },
  {
    "settings": {
      "model_id": "turboae-approximated-nonsys_basic_2022-01-05.18-10-02",
      "block_len": 100,
      "batch_size": 10000,
      "write_results_to_log": true,
      "logdir": "./test_logs/",
      "tzname": "America/Chicago",
      "write_to_tensorboard": true,
      "tensorboard_dir": "./tensorboard/testing/",
      "verbose": 1
    },
    "encoder_decoder": {
      "noninterleaved_code": {
        "trellis": {
          "state_transitions": {
            "next_states": [
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15],
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15]
            ],
            "previous_states": [
              [[0, 0], [8, 0]],
              [[0, 1], [8, 1]],
              [[1, 0], [9, 0]],
              [[1, 1], [9, 1]],
              [[2, 0], [10, 0]],
              [[2, 1], [10, 1]],
              [[3, 0], [11, 0]],
              [[3, 1], [11, 1]],
              [[4, 0], [12, 0]],
              [[4, 1], [12, 1]],
              [[5, 0], [13, 0]],
              [[5, 1], [13, 1]],
              [[6, 0], [14, 0]],
              [[6, 1], [14, 1]],
              [[7, 0], [15, 0]],
              [[7, 1], [15, 1]]
            ]
          },
          "output_table": [
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]],
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]],
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]]
          ]
        },
        "num_states": 16,
        "num_inputs": 2,
        "num_input_channels": 1,
        "num_output_channels": 2,
        "normalize_output_table": false,
        "name": "AffineConvolutionalCode"
      },
      "interleaved_code": {
        "trellis": {
          "state_transitions": {
            "next_states": [
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15],
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15]
            ],
            "previous_states": [
              [[0, 0], [8, 0]],
              [[0, 1], [8, 1]],
              [[1, 0], [9, 0]],
              [[1, 1], [9, 1]],
              [[2, 0], [10, 0]],
              [[2, 1], [10, 1]],
              [[3, 0], [11, 0]],
              [[3, 1], [11, 1]],
              [[4, 0], [12, 0]],
              [[4, 1], [12, 1]],
              [[5, 0], [13, 0]],
              [[5, 1], [13, 1]],
              [[6, 0], [14, 0]],
              [[6, 1], [14, 1]],
              [[7, 0], [15, 0]],
              [[7, 1], [15, 1]]
            ]
          },
          "output_table": [
            [[1], [0]],
            [[0], [1]],
            [[0], [1]],
            [[1], [0]],
            [[0], [1]],
            [[1], [0]],
            [[1], [0]],
            [[0], [1]],
            [[1], [0]],
            [[0], [1]],
            [[0], [1]],
            [[1], [0]],
            [[0], [1]],
            [[1], [0]],
            [[1], [0]],
            [[0], [1]]
          ]
        },
        "num_states": 16,
        "num_inputs": 2,
        "num_input_channels": 1,
        "num_output_channels": 1,
        "normalize_output_table": false,
        "name": "AffineConvolutionalCode"
      },
      "interleaver": {"block_len": 100, "name": "RandomPermuteInterleaver"},
      "channel": {
        "sigma": 1.1220184543019636,
        "good_sigma": 1,
        "bad_sigma": 1.2589254117941673,
        "snr": -1.0000000000000009,
        "good_snr": -8.881784197001252e-16,
        "bad_snr": -2.000000000000001,
        "p_gb": 0.8,
        "p_bg": 0.8,
        "block_len": 100,
        "name": "NonIIDMarkovianGaussianAsAWGN"
      },
      "decoder": {
        "decoder1": {
          "trellis_code": {
            "trellis": {
              "state_transitions": {
                "next_states": [
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15],
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15]
                ],
                "previous_states": [
                  [[0, 0], [8, 0]],
                  [[0, 1], [8, 1]],
                  [[1, 0], [9, 0]],
                  [[1, 1], [9, 1]],
                  [[2, 0], [10, 0]],
                  [[2, 1], [10, 1]],
                  [[3, 0], [11, 0]],
                  [[3, 1], [11, 1]],
                  [[4, 0], [12, 0]],
                  [[4, 1], [12, 1]],
                  [[5, 0], [13, 0]],
                  [[5, 1], [13, 1]],
                  [[6, 0], [14, 0]],
                  [[6, 1], [14, 1]],
                  [[7, 0], [15, 0]],
                  [[7, 1], [15, 1]]
                ]
              },
              "output_table": [
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]],
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]],
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]]
              ]
            },
            "num_states": 16,
            "num_inputs": 2,
            "num_input_channels": 1,
            "num_output_channels": 2,
            "normalize_output_table": false,
            "name": "AffineConvolutionalCode"
          },
          "channel": {
            "sigma": 1.1220184543019636,
            "good_sigma": 1,
            "bad_sigma": 1.2589254117941673,
            "snr": -1.0000000000000009,
            "good_snr": -8.881784197001252e-16,
            "bad_snr": -2.000000000000001,
            "p_gb": 0.8,
            "p_bg": 0.8,
            "block_len": 100,
            "name": "NonIIDMarkovianGaussianAsAWGN"
          },
          "use_max": false,
          "num_input_channels": 2,
          "num_output_channels": 1,
          "name": "BCJRDecoder"
        },
        "decoder2": {
          "trellis_code": {
            "trellis": {
              "state_transitions": {
                "next_states": [
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15],
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15]
                ],
                "previous_states": [
                  [[0, 0], [8, 0]],
                  [[0, 1], [8, 1]],
                  [[1, 0], [9, 0]],
                  [[1, 1], [9, 1]],
                  [[2, 0], [10, 0]],
                  [[2, 1], [10, 1]],
                  [[3, 0], [11, 0]],
                  [[3, 1], [11, 1]],
                  [[4, 0], [12, 0]],
                  [[4, 1], [12, 1]],
                  [[5, 0], [13, 0]],
                  [[5, 1], [13, 1]],
                  [[6, 0], [14, 0]],
                  [[6, 1], [14, 1]],
                  [[7, 0], [15, 0]],
                  [[7, 1], [15, 1]]
                ]
              },
              "output_table": [
                [[1], [0]],
                [[0], [1]],
                [[0], [1]],
                [[1], [0]],
                [[0], [1]],
                [[1], [0]],
                [[1], [0]],
                [[0], [1]],
                [[1], [0]],
                [[0], [1]],
                [[0], [1]],
                [[1], [0]],
                [[0], [1]],
                [[1], [0]],
                [[1], [0]],
                [[0], [1]]
              ]
            },
            "num_states": 16,
            "num_inputs": 2,
            "num_input_channels": 1,
            "num_output_channels": 1,
            "normalize_output_table": false,
            "name": "AffineConvolutionalCode"
          },
          "channel": {
            "sigma": 1.1220184543019636,
            "good_sigma": 1,
            "bad_sigma": 1.2589254117941673,
            "snr": -1.0000000000000009,
            "good_snr": -8.881784197001252e-16,
            "bad_snr": -2.000000000000001,
            "p_gb": 0.8,
            "p_bg": 0.8,
            "block_len": 100,
            "name": "NonIIDMarkovianGaussianAsAWGN"
          },
          "use_max": false,
          "num_input_channels": 1,
          "num_output_channels": 1,
          "name": "BCJRDecoder"
        },
        "interleaver": {"block_len": 100, "name": "RandomPermuteInterleaver"},
        "num_iter": 6,
        "num_noninterleaved_streams": 2,
        "num_input_channels": 3,
        "num_output_channels": 1,
        "name": "TurboDecoder"
      },
      "rate": [1, 3],
      "block_len": 100,
      "use_max": false,
      "num_iter": 6,
      "name": "turboae-approximated-nonsys_basic"
    },
    "steps": 100,
    "scores": {
      "ber_mean": 0.03063100017607212,
      "ber_var": 0.005528652109205723,
      "bler_mean": 0.34824201464653015,
      "bler_var": 0.22696976363658905,
      "cross_entropy_mean": 0.0872127115726471,
      "cross_entropy_var": 0.3053136467933655,
      "encoded_mean": 0.5000342726707458,
      "encoded_var": 0.25
    }
  },
  {
    "settings": {
      "model_id": "turboae-approximated-nonsys_basic_2022-01-05.18-10-02",
      "block_len": 100,
      "batch_size": 10000,
      "write_results_to_log": true,
      "logdir": "./test_logs/",
      "tzname": "America/Chicago",
      "write_to_tensorboard": true,
      "tensorboard_dir": "./tensorboard/testing/",
      "verbose": 1
    },
    "encoder_decoder": {
      "noninterleaved_code": {
        "trellis": {
          "state_transitions": {
            "next_states": [
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15],
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15]
            ],
            "previous_states": [
              [[0, 0], [8, 0]],
              [[0, 1], [8, 1]],
              [[1, 0], [9, 0]],
              [[1, 1], [9, 1]],
              [[2, 0], [10, 0]],
              [[2, 1], [10, 1]],
              [[3, 0], [11, 0]],
              [[3, 1], [11, 1]],
              [[4, 0], [12, 0]],
              [[4, 1], [12, 1]],
              [[5, 0], [13, 0]],
              [[5, 1], [13, 1]],
              [[6, 0], [14, 0]],
              [[6, 1], [14, 1]],
              [[7, 0], [15, 0]],
              [[7, 1], [15, 1]]
            ]
          },
          "output_table": [
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]],
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]],
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]]
          ]
        },
        "num_states": 16,
        "num_inputs": 2,
        "num_input_channels": 1,
        "num_output_channels": 2,
        "normalize_output_table": false,
        "name": "AffineConvolutionalCode"
      },
      "interleaved_code": {
        "trellis": {
          "state_transitions": {
            "next_states": [
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15],
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15]
            ],
            "previous_states": [
              [[0, 0], [8, 0]],
              [[0, 1], [8, 1]],
              [[1, 0], [9, 0]],
              [[1, 1], [9, 1]],
              [[2, 0], [10, 0]],
              [[2, 1], [10, 1]],
              [[3, 0], [11, 0]],
              [[3, 1], [11, 1]],
              [[4, 0], [12, 0]],
              [[4, 1], [12, 1]],
              [[5, 0], [13, 0]],
              [[5, 1], [13, 1]],
              [[6, 0], [14, 0]],
              [[6, 1], [14, 1]],
              [[7, 0], [15, 0]],
              [[7, 1], [15, 1]]
            ]
          },
          "output_table": [
            [[1], [0]],
            [[0], [1]],
            [[0], [1]],
            [[1], [0]],
            [[0], [1]],
            [[1], [0]],
            [[1], [0]],
            [[0], [1]],
            [[1], [0]],
            [[0], [1]],
            [[0], [1]],
            [[1], [0]],
            [[0], [1]],
            [[1], [0]],
            [[1], [0]],
            [[0], [1]]
          ]
        },
        "num_states": 16,
        "num_inputs": 2,
        "num_input_channels": 1,
        "num_output_channels": 1,
        "normalize_output_table": false,
        "name": "AffineConvolutionalCode"
      },
      "interleaver": {"block_len": 100, "name": "RandomPermuteInterleaver"},
      "channel": {
        "sigma": 1.0592537251772889,
        "good_sigma": 0.9440608762859234,
        "bad_sigma": 1.1885022274370183,
        "snr": -0.49999999999999956,
        "good_snr": 0.5000000000000004,
        "bad_snr": -1.4999999999999996,
        "p_gb": 0.8,
        "p_bg": 0.8,
        "block_len": 100,
        "name": "NonIIDMarkovianGaussianAsAWGN"
      },
      "decoder": {
        "decoder1": {
          "trellis_code": {
            "trellis": {
              "state_transitions": {
                "next_states": [
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15],
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15]
                ],
                "previous_states": [
                  [[0, 0], [8, 0]],
                  [[0, 1], [8, 1]],
                  [[1, 0], [9, 0]],
                  [[1, 1], [9, 1]],
                  [[2, 0], [10, 0]],
                  [[2, 1], [10, 1]],
                  [[3, 0], [11, 0]],
                  [[3, 1], [11, 1]],
                  [[4, 0], [12, 0]],
                  [[4, 1], [12, 1]],
                  [[5, 0], [13, 0]],
                  [[5, 1], [13, 1]],
                  [[6, 0], [14, 0]],
                  [[6, 1], [14, 1]],
                  [[7, 0], [15, 0]],
                  [[7, 1], [15, 1]]
                ]
              },
              "output_table": [
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]],
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]],
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]]
              ]
            },
            "num_states": 16,
            "num_inputs": 2,
            "num_input_channels": 1,
            "num_output_channels": 2,
            "normalize_output_table": false,
            "name": "AffineConvolutionalCode"
          },
          "channel": {
            "sigma": 1.0592537251772889,
            "good_sigma": 0.9440608762859234,
            "bad_sigma": 1.1885022274370183,
            "snr": -0.49999999999999956,
            "good_snr": 0.5000000000000004,
            "bad_snr": -1.4999999999999996,
            "p_gb": 0.8,
            "p_bg": 0.8,
            "block_len": 100,
            "name": "NonIIDMarkovianGaussianAsAWGN"
          },
          "use_max": false,
          "num_input_channels": 2,
          "num_output_channels": 1,
          "name": "BCJRDecoder"
        },
        "decoder2": {
          "trellis_code": {
            "trellis": {
              "state_transitions": {
                "next_states": [
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15],
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15]
                ],
                "previous_states": [
                  [[0, 0], [8, 0]],
                  [[0, 1], [8, 1]],
                  [[1, 0], [9, 0]],
                  [[1, 1], [9, 1]],
                  [[2, 0], [10, 0]],
                  [[2, 1], [10, 1]],
                  [[3, 0], [11, 0]],
                  [[3, 1], [11, 1]],
                  [[4, 0], [12, 0]],
                  [[4, 1], [12, 1]],
                  [[5, 0], [13, 0]],
                  [[5, 1], [13, 1]],
                  [[6, 0], [14, 0]],
                  [[6, 1], [14, 1]],
                  [[7, 0], [15, 0]],
                  [[7, 1], [15, 1]]
                ]
              },
              "output_table": [
                [[1], [0]],
                [[0], [1]],
                [[0], [1]],
                [[1], [0]],
                [[0], [1]],
                [[1], [0]],
                [[1], [0]],
                [[0], [1]],
                [[1], [0]],
                [[0], [1]],
                [[0], [1]],
                [[1], [0]],
                [[0], [1]],
                [[1], [0]],
                [[1], [0]],
                [[0], [1]]
              ]
            },
            "num_states": 16,
            "num_inputs": 2,
            "num_input_channels": 1,
            "num_output_channels": 1,
            "normalize_output_table": false,
            "name": "AffineConvolutionalCode"
          },
          "channel": {
            "sigma": 1.0592537251772889,
            "good_sigma": 0.9440608762859234,
            "bad_sigma": 1.1885022274370183,
            "snr": -0.49999999999999956,
            "good_snr": 0.5000000000000004,
            "bad_snr": -1.4999999999999996,
            "p_gb": 0.8,
            "p_bg": 0.8,
            "block_len": 100,
            "name": "NonIIDMarkovianGaussianAsAWGN"
          },
          "use_max": false,
          "num_input_channels": 1,
          "num_output_channels": 1,
          "name": "BCJRDecoder"
        },
        "interleaver": {"block_len": 100, "name": "RandomPermuteInterleaver"},
        "num_iter": 6,
        "num_noninterleaved_streams": 2,
        "num_input_channels": 3,
        "num_output_channels": 1,
        "name": "TurboDecoder"
      },
      "rate": [1, 3],
      "block_len": 100,
      "use_max": false,
      "num_iter": 6,
      "name": "turboae-approximated-nonsys_basic"
    },
    "steps": 100,
    "scores": {
      "ber_mean": 0.010886198841035366,
      "ber_var": 0.001794292125850916,
      "bler_mean": 0.18647901713848114,
      "bler_var": 0.15170468389987946,
      "cross_entropy_mean": 0.03578012436628342,
      "cross_entropy_var": 0.16704295575618744,
      "encoded_mean": 0.5000063180923462,
      "encoded_var": 0.2499999701976776
    }
  },
  {
    "settings": {
      "model_id": "turboae-approximated-nonsys_basic_2022-01-05.18-10-02",
      "block_len": 100,
      "batch_size": 10000,
      "write_results_to_log": true,
      "logdir": "./test_logs/",
      "tzname": "America/Chicago",
      "write_to_tensorboard": true,
      "tensorboard_dir": "./tensorboard/testing/",
      "verbose": 1
    },
    "encoder_decoder": {
      "noninterleaved_code": {
        "trellis": {
          "state_transitions": {
            "next_states": [
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15],
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15]
            ],
            "previous_states": [
              [[0, 0], [8, 0]],
              [[0, 1], [8, 1]],
              [[1, 0], [9, 0]],
              [[1, 1], [9, 1]],
              [[2, 0], [10, 0]],
              [[2, 1], [10, 1]],
              [[3, 0], [11, 0]],
              [[3, 1], [11, 1]],
              [[4, 0], [12, 0]],
              [[4, 1], [12, 1]],
              [[5, 0], [13, 0]],
              [[5, 1], [13, 1]],
              [[6, 0], [14, 0]],
              [[6, 1], [14, 1]],
              [[7, 0], [15, 0]],
              [[7, 1], [15, 1]]
            ]
          },
          "output_table": [
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]],
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]],
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]]
          ]
        },
        "num_states": 16,
        "num_inputs": 2,
        "num_input_channels": 1,
        "num_output_channels": 2,
        "normalize_output_table": false,
        "name": "AffineConvolutionalCode"
      },
      "interleaved_code": {
        "trellis": {
          "state_transitions": {
            "next_states": [
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15],
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15]
            ],
            "previous_states": [
              [[0, 0], [8, 0]],
              [[0, 1], [8, 1]],
              [[1, 0], [9, 0]],
              [[1, 1], [9, 1]],
              [[2, 0], [10, 0]],
              [[2, 1], [10, 1]],
              [[3, 0], [11, 0]],
              [[3, 1], [11, 1]],
              [[4, 0], [12, 0]],
              [[4, 1], [12, 1]],
              [[5, 0], [13, 0]],
              [[5, 1], [13, 1]],
              [[6, 0], [14, 0]],
              [[6, 1], [14, 1]],
              [[7, 0], [15, 0]],
              [[7, 1], [15, 1]]
            ]
          },
          "output_table": [
            [[1], [0]],
            [[0], [1]],
            [[0], [1]],
            [[1], [0]],
            [[0], [1]],
            [[1], [0]],
            [[1], [0]],
            [[0], [1]],
            [[1], [0]],
            [[0], [1]],
            [[0], [1]],
            [[1], [0]],
            [[0], [1]],
            [[1], [0]],
            [[1], [0]],
            [[0], [1]]
          ]
        },
        "num_states": 16,
        "num_inputs": 2,
        "num_input_channels": 1,
        "num_output_channels": 1,
        "normalize_output_table": false,
        "name": "AffineConvolutionalCode"
      },
      "interleaver": {"block_len": 100, "name": "RandomPermuteInterleaver"},
      "channel": {
        "sigma": 1,
        "good_sigma": 0.8912509381337456,
        "bad_sigma": 1.1220184543019636,
        "snr": 0,
        "good_snr": 1,
        "bad_snr": -1,
        "p_gb": 0.8,
        "p_bg": 0.8,
        "block_len": 100,
        "name": "NonIIDMarkovianGaussianAsAWGN"
      },
      "decoder": {
        "decoder1": {
          "trellis_code": {
            "trellis": {
              "state_transitions": {
                "next_states": [
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15],
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15]
                ],
                "previous_states": [
                  [[0, 0], [8, 0]],
                  [[0, 1], [8, 1]],
                  [[1, 0], [9, 0]],
                  [[1, 1], [9, 1]],
                  [[2, 0], [10, 0]],
                  [[2, 1], [10, 1]],
                  [[3, 0], [11, 0]],
                  [[3, 1], [11, 1]],
                  [[4, 0], [12, 0]],
                  [[4, 1], [12, 1]],
                  [[5, 0], [13, 0]],
                  [[5, 1], [13, 1]],
                  [[6, 0], [14, 0]],
                  [[6, 1], [14, 1]],
                  [[7, 0], [15, 0]],
                  [[7, 1], [15, 1]]
                ]
              },
              "output_table": [
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]],
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]],
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]]
              ]
            },
            "num_states": 16,
            "num_inputs": 2,
            "num_input_channels": 1,
            "num_output_channels": 2,
            "normalize_output_table": false,
            "name": "AffineConvolutionalCode"
          },
          "channel": {
            "sigma": 1,
            "good_sigma": 0.8912509381337456,
            "bad_sigma": 1.1220184543019636,
            "snr": 0,
            "good_snr": 1,
            "bad_snr": -1,
            "p_gb": 0.8,
            "p_bg": 0.8,
            "block_len": 100,
            "name": "NonIIDMarkovianGaussianAsAWGN"
          },
          "use_max": false,
          "num_input_channels": 2,
          "num_output_channels": 1,
          "name": "BCJRDecoder"
        },
        "decoder2": {
          "trellis_code": {
            "trellis": {
              "state_transitions": {
                "next_states": [
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15],
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15]
                ],
                "previous_states": [
                  [[0, 0], [8, 0]],
                  [[0, 1], [8, 1]],
                  [[1, 0], [9, 0]],
                  [[1, 1], [9, 1]],
                  [[2, 0], [10, 0]],
                  [[2, 1], [10, 1]],
                  [[3, 0], [11, 0]],
                  [[3, 1], [11, 1]],
                  [[4, 0], [12, 0]],
                  [[4, 1], [12, 1]],
                  [[5, 0], [13, 0]],
                  [[5, 1], [13, 1]],
                  [[6, 0], [14, 0]],
                  [[6, 1], [14, 1]],
                  [[7, 0], [15, 0]],
                  [[7, 1], [15, 1]]
                ]
              },
              "output_table": [
                [[1], [0]],
                [[0], [1]],
                [[0], [1]],
                [[1], [0]],
                [[0], [1]],
                [[1], [0]],
                [[1], [0]],
                [[0], [1]],
                [[1], [0]],
                [[0], [1]],
                [[0], [1]],
                [[1], [0]],
                [[0], [1]],
                [[1], [0]],
                [[1], [0]],
                [[0], [1]]
              ]
            },
            "num_states": 16,
            "num_inputs": 2,
            "num_input_channels": 1,
            "num_output_channels": 1,
            "normalize_output_table": false,
            "name": "AffineConvolutionalCode"
          },
          "channel": {
            "sigma": 1,
            "good_sigma": 0.8912509381337456,
            "bad_sigma": 1.1220184543019636,
            "snr": 0,
            "good_snr": 1,
            "bad_snr": -1,
            "p_gb": 0.8,
            "p_bg": 0.8,
            "block_len": 100,
            "name": "NonIIDMarkovianGaussianAsAWGN"
          },
          "use_max": false,
          "num_input_channels": 1,
          "num_output_channels": 1,
          "name": "BCJRDecoder"
        },
        "interleaver": {"block_len": 100, "name": "RandomPermuteInterleaver"},
        "num_iter": 6,
        "num_noninterleaved_streams": 2,
        "num_input_channels": 3,
        "num_output_channels": 1,
        "name": "TurboDecoder"
      },
      "rate": [1, 3],
      "block_len": 100,
      "use_max": false,
      "num_iter": 6,
      "name": "turboae-approximated-nonsys_basic"
    },
    "steps": 100,
    "scores": {
      "ber_mean": 0.003310590051114559,
      "ber_var": 0.00040639692451804876,
      "bler_mean": 0.09048299491405487,
      "bler_var": 0.08229589462280273,
      "cross_entropy_mean": 0.01294923946261406,
      "cross_entropy_var": 0.07928993552923203,
      "encoded_mean": 0.5000340342521667,
      "encoded_var": 0.2499999701976776
    }
  },
  {
    "settings": {
      "model_id": "turboae-approximated-nonsys_basic_2022-01-05.18-10-02",
      "block_len": 100,
      "batch_size": 10000,
      "write_results_to_log": true,
      "logdir": "./test_logs/",
      "tzname": "America/Chicago",
      "write_to_tensorboard": true,
      "tensorboard_dir": "./tensorboard/testing/",
      "verbose": 1
    },
    "encoder_decoder": {
      "noninterleaved_code": {
        "trellis": {
          "state_transitions": {
            "next_states": [
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15],
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15]
            ],
            "previous_states": [
              [[0, 0], [8, 0]],
              [[0, 1], [8, 1]],
              [[1, 0], [9, 0]],
              [[1, 1], [9, 1]],
              [[2, 0], [10, 0]],
              [[2, 1], [10, 1]],
              [[3, 0], [11, 0]],
              [[3, 1], [11, 1]],
              [[4, 0], [12, 0]],
              [[4, 1], [12, 1]],
              [[5, 0], [13, 0]],
              [[5, 1], [13, 1]],
              [[6, 0], [14, 0]],
              [[6, 1], [14, 1]],
              [[7, 0], [15, 0]],
              [[7, 1], [15, 1]]
            ]
          },
          "output_table": [
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]],
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]],
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]]
          ]
        },
        "num_states": 16,
        "num_inputs": 2,
        "num_input_channels": 1,
        "num_output_channels": 2,
        "normalize_output_table": false,
        "name": "AffineConvolutionalCode"
      },
      "interleaved_code": {
        "trellis": {
          "state_transitions": {
            "next_states": [
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15],
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15]
            ],
            "previous_states": [
              [[0, 0], [8, 0]],
              [[0, 1], [8, 1]],
              [[1, 0], [9, 0]],
              [[1, 1], [9, 1]],
              [[2, 0], [10, 0]],
              [[2, 1], [10, 1]],
              [[3, 0], [11, 0]],
              [[3, 1], [11, 1]],
              [[4, 0], [12, 0]],
              [[4, 1], [12, 1]],
              [[5, 0], [13, 0]],
              [[5, 1], [13, 1]],
              [[6, 0], [14, 0]],
              [[6, 1], [14, 1]],
              [[7, 0], [15, 0]],
              [[7, 1], [15, 1]]
            ]
          },
          "output_table": [
            [[1], [0]],
            [[0], [1]],
            [[0], [1]],
            [[1], [0]],
            [[0], [1]],
            [[1], [0]],
            [[1], [0]],
            [[0], [1]],
            [[1], [0]],
            [[0], [1]],
            [[0], [1]],
            [[1], [0]],
            [[0], [1]],
            [[1], [0]],
            [[1], [0]],
            [[0], [1]]
          ]
        },
        "num_states": 16,
        "num_inputs": 2,
        "num_input_channels": 1,
        "num_output_channels": 1,
        "normalize_output_table": false,
        "name": "AffineConvolutionalCode"
      },
      "interleaver": {"block_len": 100, "name": "RandomPermuteInterleaver"},
      "channel": {
        "sigma": 0.9440608762859234,
        "good_sigma": 0.8413951416451951,
        "bad_sigma": 1.0592537251772889,
        "snr": 0.49999999999999983,
        "good_snr": 1.4999999999999998,
        "bad_snr": -0.5000000000000002,
        "p_gb": 0.8,
        "p_bg": 0.8,
        "block_len": 100,
        "name": "NonIIDMarkovianGaussianAsAWGN"
      },
      "decoder": {
        "decoder1": {
          "trellis_code": {
            "trellis": {
              "state_transitions": {
                "next_states": [
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15],
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15]
                ],
                "previous_states": [
                  [[0, 0], [8, 0]],
                  [[0, 1], [8, 1]],
                  [[1, 0], [9, 0]],
                  [[1, 1], [9, 1]],
                  [[2, 0], [10, 0]],
                  [[2, 1], [10, 1]],
                  [[3, 0], [11, 0]],
                  [[3, 1], [11, 1]],
                  [[4, 0], [12, 0]],
                  [[4, 1], [12, 1]],
                  [[5, 0], [13, 0]],
                  [[5, 1], [13, 1]],
                  [[6, 0], [14, 0]],
                  [[6, 1], [14, 1]],
                  [[7, 0], [15, 0]],
                  [[7, 1], [15, 1]]
                ]
              },
              "output_table": [
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]],
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]],
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]]
              ]
            },
            "num_states": 16,
            "num_inputs": 2,
            "num_input_channels": 1,
            "num_output_channels": 2,
            "normalize_output_table": false,
            "name": "AffineConvolutionalCode"
          },
          "channel": {
            "sigma": 0.9440608762859234,
            "good_sigma": 0.8413951416451951,
            "bad_sigma": 1.0592537251772889,
            "snr": 0.49999999999999983,
            "good_snr": 1.4999999999999998,
            "bad_snr": -0.5000000000000002,
            "p_gb": 0.8,
            "p_bg": 0.8,
            "block_len": 100,
            "name": "NonIIDMarkovianGaussianAsAWGN"
          },
          "use_max": false,
          "num_input_channels": 2,
          "num_output_channels": 1,
          "name": "BCJRDecoder"
        },
        "decoder2": {
          "trellis_code": {
            "trellis": {
              "state_transitions": {
                "next_states": [
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15],
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15]
                ],
                "previous_states": [
                  [[0, 0], [8, 0]],
                  [[0, 1], [8, 1]],
                  [[1, 0], [9, 0]],
                  [[1, 1], [9, 1]],
                  [[2, 0], [10, 0]],
                  [[2, 1], [10, 1]],
                  [[3, 0], [11, 0]],
                  [[3, 1], [11, 1]],
                  [[4, 0], [12, 0]],
                  [[4, 1], [12, 1]],
                  [[5, 0], [13, 0]],
                  [[5, 1], [13, 1]],
                  [[6, 0], [14, 0]],
                  [[6, 1], [14, 1]],
                  [[7, 0], [15, 0]],
                  [[7, 1], [15, 1]]
                ]
              },
              "output_table": [
                [[1], [0]],
                [[0], [1]],
                [[0], [1]],
                [[1], [0]],
                [[0], [1]],
                [[1], [0]],
                [[1], [0]],
                [[0], [1]],
                [[1], [0]],
                [[0], [1]],
                [[0], [1]],
                [[1], [0]],
                [[0], [1]],
                [[1], [0]],
                [[1], [0]],
                [[0], [1]]
              ]
            },
            "num_states": 16,
            "num_inputs": 2,
            "num_input_channels": 1,
            "num_output_channels": 1,
            "normalize_output_table": false,
            "name": "AffineConvolutionalCode"
          },
          "channel": {
            "sigma": 0.9440608762859234,
            "good_sigma": 0.8413951416451951,
            "bad_sigma": 1.0592537251772889,
            "snr": 0.49999999999999983,
            "good_snr": 1.4999999999999998,
            "bad_snr": -0.5000000000000002,
            "p_gb": 0.8,
            "p_bg": 0.8,
            "block_len": 100,
            "name": "NonIIDMarkovianGaussianAsAWGN"
          },
          "use_max": false,
          "num_input_channels": 1,
          "num_output_channels": 1,
          "name": "BCJRDecoder"
        },
        "interleaver": {"block_len": 100, "name": "RandomPermuteInterleaver"},
        "num_iter": 6,
        "num_noninterleaved_streams": 2,
        "num_input_channels": 3,
        "num_output_channels": 1,
        "name": "TurboDecoder"
      },
      "rate": [1, 3],
      "block_len": 100,
      "use_max": false,
      "num_iter": 6,
      "name": "turboae-approximated-nonsys_basic"
    },
    "steps": 100,
    "scores": {
      "ber_mean": 0.0010094399331137538,
      "ber_var": 0.0000707659128238447,
      "bler_mean": 0.04212399572134018,
      "bler_var": 0.04034959524869919,
      "cross_entropy_mean": 0.004708964843302965,
      "cross_entropy_var": 0.0368490144610405,
      "encoded_mean": 0.5000192523002625,
      "encoded_var": 0.25
    }
  },
  {
    "settings": {
      "model_id": "turboae-approximated-nonsys_basic_2022-01-05.18-10-02",
      "block_len": 100,
      "batch_size": 10000,
      "write_results_to_log": true,
      "logdir": "./test_logs/",
      "tzname": "America/Chicago",
      "write_to_tensorboard": true,
      "tensorboard_dir": "./tensorboard/testing/",
      "verbose": 1
    },
    "encoder_decoder": {
      "noninterleaved_code": {
        "trellis": {
          "state_transitions": {
            "next_states": [
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15],
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15]
            ],
            "previous_states": [
              [[0, 0], [8, 0]],
              [[0, 1], [8, 1]],
              [[1, 0], [9, 0]],
              [[1, 1], [9, 1]],
              [[2, 0], [10, 0]],
              [[2, 1], [10, 1]],
              [[3, 0], [11, 0]],
              [[3, 1], [11, 1]],
              [[4, 0], [12, 0]],
              [[4, 1], [12, 1]],
              [[5, 0], [13, 0]],
              [[5, 1], [13, 1]],
              [[6, 0], [14, 0]],
              [[6, 1], [14, 1]],
              [[7, 0], [15, 0]],
              [[7, 1], [15, 1]]
            ]
          },
          "output_table": [
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]],
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]],
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]]
          ]
        },
        "num_states": 16,
        "num_inputs": 2,
        "num_input_channels": 1,
        "num_output_channels": 2,
        "normalize_output_table": false,
        "name": "AffineConvolutionalCode"
      },
      "interleaved_code": {
        "trellis": {
          "state_transitions": {
            "next_states": [
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15],
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15]
            ],
            "previous_states": [
              [[0, 0], [8, 0]],
              [[0, 1], [8, 1]],
              [[1, 0], [9, 0]],
              [[1, 1], [9, 1]],
              [[2, 0], [10, 0]],
              [[2, 1], [10, 1]],
              [[3, 0], [11, 0]],
              [[3, 1], [11, 1]],
              [[4, 0], [12, 0]],
              [[4, 1], [12, 1]],
              [[5, 0], [13, 0]],
              [[5, 1], [13, 1]],
              [[6, 0], [14, 0]],
              [[6, 1], [14, 1]],
              [[7, 0], [15, 0]],
              [[7, 1], [15, 1]]
            ]
          },
          "output_table": [
            [[1], [0]],
            [[0], [1]],
            [[0], [1]],
            [[1], [0]],
            [[0], [1]],
            [[1], [0]],
            [[1], [0]],
            [[0], [1]],
            [[1], [0]],
            [[0], [1]],
            [[0], [1]],
            [[1], [0]],
            [[0], [1]],
            [[1], [0]],
            [[1], [0]],
            [[0], [1]]
          ]
        },
        "num_states": 16,
        "num_inputs": 2,
        "num_input_channels": 1,
        "num_output_channels": 1,
        "normalize_output_table": false,
        "name": "AffineConvolutionalCode"
      },
      "interleaver": {"block_len": 100, "name": "RandomPermuteInterleaver"},
      "channel": {
        "sigma": 0.8912509381337456,
        "good_sigma": 0.7943282347242816,
        "bad_sigma": 1,
        "snr": 0.9999999999999993,
        "good_snr": 1.9999999999999993,
        "bad_snr": -6.661338147750939e-16,
        "p_gb": 0.8,
        "p_bg": 0.8,
        "block_len": 100,
        "name": "NonIIDMarkovianGaussianAsAWGN"
      },
      "decoder": {
        "decoder1": {
          "trellis_code": {
            "trellis": {
              "state_transitions": {
                "next_states": [
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15],
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15]
                ],
                "previous_states": [
                  [[0, 0], [8, 0]],
                  [[0, 1], [8, 1]],
                  [[1, 0], [9, 0]],
                  [[1, 1], [9, 1]],
                  [[2, 0], [10, 0]],
                  [[2, 1], [10, 1]],
                  [[3, 0], [11, 0]],
                  [[3, 1], [11, 1]],
                  [[4, 0], [12, 0]],
                  [[4, 1], [12, 1]],
                  [[5, 0], [13, 0]],
                  [[5, 1], [13, 1]],
                  [[6, 0], [14, 0]],
                  [[6, 1], [14, 1]],
                  [[7, 0], [15, 0]],
                  [[7, 1], [15, 1]]
                ]
              },
              "output_table": [
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]],
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]],
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]]
              ]
            },
            "num_states": 16,
            "num_inputs": 2,
            "num_input_channels": 1,
            "num_output_channels": 2,
            "normalize_output_table": false,
            "name": "AffineConvolutionalCode"
          },
          "channel": {
            "sigma": 0.8912509381337456,
            "good_sigma": 0.7943282347242816,
            "bad_sigma": 1,
            "snr": 0.9999999999999993,
            "good_snr": 1.9999999999999993,
            "bad_snr": -6.661338147750939e-16,
            "p_gb": 0.8,
            "p_bg": 0.8,
            "block_len": 100,
            "name": "NonIIDMarkovianGaussianAsAWGN"
          },
          "use_max": false,
          "num_input_channels": 2,
          "num_output_channels": 1,
          "name": "BCJRDecoder"
        },
        "decoder2": {
          "trellis_code": {
            "trellis": {
              "state_transitions": {
                "next_states": [
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15],
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15]
                ],
                "previous_states": [
                  [[0, 0], [8, 0]],
                  [[0, 1], [8, 1]],
                  [[1, 0], [9, 0]],
                  [[1, 1], [9, 1]],
                  [[2, 0], [10, 0]],
                  [[2, 1], [10, 1]],
                  [[3, 0], [11, 0]],
                  [[3, 1], [11, 1]],
                  [[4, 0], [12, 0]],
                  [[4, 1], [12, 1]],
                  [[5, 0], [13, 0]],
                  [[5, 1], [13, 1]],
                  [[6, 0], [14, 0]],
                  [[6, 1], [14, 1]],
                  [[7, 0], [15, 0]],
                  [[7, 1], [15, 1]]
                ]
              },
              "output_table": [
                [[1], [0]],
                [[0], [1]],
                [[0], [1]],
                [[1], [0]],
                [[0], [1]],
                [[1], [0]],
                [[1], [0]],
                [[0], [1]],
                [[1], [0]],
                [[0], [1]],
                [[0], [1]],
                [[1], [0]],
                [[0], [1]],
                [[1], [0]],
                [[1], [0]],
                [[0], [1]]
              ]
            },
            "num_states": 16,
            "num_inputs": 2,
            "num_input_channels": 1,
            "num_output_channels": 1,
            "normalize_output_table": false,
            "name": "AffineConvolutionalCode"
          },
          "channel": {
            "sigma": 0.8912509381337456,
            "good_sigma": 0.7943282347242816,
            "bad_sigma": 1,
            "snr": 0.9999999999999993,
            "good_snr": 1.9999999999999993,
            "bad_snr": -6.661338147750939e-16,
            "p_gb": 0.8,
            "p_bg": 0.8,
            "block_len": 100,
            "name": "NonIIDMarkovianGaussianAsAWGN"
          },
          "use_max": false,
          "num_input_channels": 1,
          "num_output_channels": 1,
          "name": "BCJRDecoder"
        },
        "interleaver": {"block_len": 100, "name": "RandomPermuteInterleaver"},
        "num_iter": 6,
        "num_noninterleaved_streams": 2,
        "num_input_channels": 3,
        "num_output_channels": 1,
        "name": "TurboDecoder"
      },
      "rate": [1, 3],
      "block_len": 100,
      "use_max": false,
      "num_iter": 6,
      "name": "turboae-approximated-nonsys_basic"
    },
    "steps": 100,
    "scores": {
      "ber_mean": 0.00036346007254906,
      "ber_var": 0.000012914109902339987,
      "bler_mean": 0.019794000312685966,
      "bler_var": 0.019402220845222473,
      "cross_entropy_mean": 0.0019438143353909254,
      "cross_entropy_var": 0.01871020905673504,
      "encoded_mean": 0.49993282556533813,
      "encoded_var": 0.25
    }
  },
  {
    "settings": {
      "model_id": "turboae-approximated-nonsys_basic_2022-01-05.18-10-02",
      "block_len": 100,
      "batch_size": 10000,
      "write_results_to_log": true,
      "logdir": "./test_logs/",
      "tzname": "America/Chicago",
      "write_to_tensorboard": true,
      "tensorboard_dir": "./tensorboard/testing/",
      "verbose": 1
    },
    "encoder_decoder": {
      "noninterleaved_code": {
        "trellis": {
          "state_transitions": {
            "next_states": [
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15],
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15]
            ],
            "previous_states": [
              [[0, 0], [8, 0]],
              [[0, 1], [8, 1]],
              [[1, 0], [9, 0]],
              [[1, 1], [9, 1]],
              [[2, 0], [10, 0]],
              [[2, 1], [10, 1]],
              [[3, 0], [11, 0]],
              [[3, 1], [11, 1]],
              [[4, 0], [12, 0]],
              [[4, 1], [12, 1]],
              [[5, 0], [13, 0]],
              [[5, 1], [13, 1]],
              [[6, 0], [14, 0]],
              [[6, 1], [14, 1]],
              [[7, 0], [15, 0]],
              [[7, 1], [15, 1]]
            ]
          },
          "output_table": [
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]],
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]],
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]]
          ]
        },
        "num_states": 16,
        "num_inputs": 2,
        "num_input_channels": 1,
        "num_output_channels": 2,
        "normalize_output_table": false,
        "name": "AffineConvolutionalCode"
      },
      "interleaved_code": {
        "trellis": {
          "state_transitions": {
            "next_states": [
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15],
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15]
            ],
            "previous_states": [
              [[0, 0], [8, 0]],
              [[0, 1], [8, 1]],
              [[1, 0], [9, 0]],
              [[1, 1], [9, 1]],
              [[2, 0], [10, 0]],
              [[2, 1], [10, 1]],
              [[3, 0], [11, 0]],
              [[3, 1], [11, 1]],
              [[4, 0], [12, 0]],
              [[4, 1], [12, 1]],
              [[5, 0], [13, 0]],
              [[5, 1], [13, 1]],
              [[6, 0], [14, 0]],
              [[6, 1], [14, 1]],
              [[7, 0], [15, 0]],
              [[7, 1], [15, 1]]
            ]
          },
          "output_table": [
            [[1], [0]],
            [[0], [1]],
            [[0], [1]],
            [[1], [0]],
            [[0], [1]],
            [[1], [0]],
            [[1], [0]],
            [[0], [1]],
            [[1], [0]],
            [[0], [1]],
            [[0], [1]],
            [[1], [0]],
            [[0], [1]],
            [[1], [0]],
            [[1], [0]],
            [[0], [1]]
          ]
        },
        "num_states": 16,
        "num_inputs": 2,
        "num_input_channels": 1,
        "num_output_channels": 1,
        "normalize_output_table": false,
        "name": "AffineConvolutionalCode"
      },
      "interleaver": {"block_len": 100, "name": "RandomPermuteInterleaver"},
      "channel": {
        "sigma": 0.8413951416451951,
        "good_sigma": 0.7498942093324559,
        "bad_sigma": 0.9440608762859235,
        "snr": 1.4999999999999991,
        "good_snr": 2.499999999999999,
        "bad_snr": 0.4999999999999991,
        "p_gb": 0.8,
        "p_bg": 0.8,
        "block_len": 100,
        "name": "NonIIDMarkovianGaussianAsAWGN"
      },
      "decoder": {
        "decoder1": {
          "trellis_code": {
            "trellis": {
              "state_transitions": {
                "next_states": [
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15],
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15]
                ],
                "previous_states": [
                  [[0, 0], [8, 0]],
                  [[0, 1], [8, 1]],
                  [[1, 0], [9, 0]],
                  [[1, 1], [9, 1]],
                  [[2, 0], [10, 0]],
                  [[2, 1], [10, 1]],
                  [[3, 0], [11, 0]],
                  [[3, 1], [11, 1]],
                  [[4, 0], [12, 0]],
                  [[4, 1], [12, 1]],
                  [[5, 0], [13, 0]],
                  [[5, 1], [13, 1]],
                  [[6, 0], [14, 0]],
                  [[6, 1], [14, 1]],
                  [[7, 0], [15, 0]],
                  [[7, 1], [15, 1]]
                ]
              },
              "output_table": [
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]],
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]],
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]]
              ]
            },
            "num_states": 16,
            "num_inputs": 2,
            "num_input_channels": 1,
            "num_output_channels": 2,
            "normalize_output_table": false,
            "name": "AffineConvolutionalCode"
          },
          "channel": {
            "sigma": 0.8413951416451951,
            "good_sigma": 0.7498942093324559,
            "bad_sigma": 0.9440608762859235,
            "snr": 1.4999999999999991,
            "good_snr": 2.499999999999999,
            "bad_snr": 0.4999999999999991,
            "p_gb": 0.8,
            "p_bg": 0.8,
            "block_len": 100,
            "name": "NonIIDMarkovianGaussianAsAWGN"
          },
          "use_max": false,
          "num_input_channels": 2,
          "num_output_channels": 1,
          "name": "BCJRDecoder"
        },
        "decoder2": {
          "trellis_code": {
            "trellis": {
              "state_transitions": {
                "next_states": [
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15],
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15]
                ],
                "previous_states": [
                  [[0, 0], [8, 0]],
                  [[0, 1], [8, 1]],
                  [[1, 0], [9, 0]],
                  [[1, 1], [9, 1]],
                  [[2, 0], [10, 0]],
                  [[2, 1], [10, 1]],
                  [[3, 0], [11, 0]],
                  [[3, 1], [11, 1]],
                  [[4, 0], [12, 0]],
                  [[4, 1], [12, 1]],
                  [[5, 0], [13, 0]],
                  [[5, 1], [13, 1]],
                  [[6, 0], [14, 0]],
                  [[6, 1], [14, 1]],
                  [[7, 0], [15, 0]],
                  [[7, 1], [15, 1]]
                ]
              },
              "output_table": [
                [[1], [0]],
                [[0], [1]],
                [[0], [1]],
                [[1], [0]],
                [[0], [1]],
                [[1], [0]],
                [[1], [0]],
                [[0], [1]],
                [[1], [0]],
                [[0], [1]],
                [[0], [1]],
                [[1], [0]],
                [[0], [1]],
                [[1], [0]],
                [[1], [0]],
                [[0], [1]]
              ]
            },
            "num_states": 16,
            "num_inputs": 2,
            "num_input_channels": 1,
            "num_output_channels": 1,
            "normalize_output_table": false,
            "name": "AffineConvolutionalCode"
          },
          "channel": {
            "sigma": 0.8413951416451951,
            "good_sigma": 0.7498942093324559,
            "bad_sigma": 0.9440608762859235,
            "snr": 1.4999999999999991,
            "good_snr": 2.499999999999999,
            "bad_snr": 0.4999999999999991,
            "p_gb": 0.8,
            "p_bg": 0.8,
            "block_len": 100,
            "name": "NonIIDMarkovianGaussianAsAWGN"
          },
          "use_max": false,
          "num_input_channels": 1,
          "num_output_channels": 1,
          "name": "BCJRDecoder"
        },
        "interleaver": {"block_len": 100, "name": "RandomPermuteInterleaver"},
        "num_iter": 6,
        "num_noninterleaved_streams": 2,
        "num_input_channels": 3,
        "num_output_channels": 1,
        "name": "TurboDecoder"
      },
      "rate": [1, 3],
      "block_len": 100,
      "use_max": false,
      "num_iter": 6,
      "name": "turboae-approximated-nonsys_basic"
    },
    "steps": 100,
    "scores": {
      "ber_mean": 0.00014878000365570188,
      "ber_var": 0.0000033280680327152368,
      "bler_mean": 0.009313000366091728,
      "bler_var": 0.009226277470588684,
      "cross_entropy_mean": 0.0008646536152809858,
      "cross_entropy_var": 0.00949705671519041,
      "encoded_mean": 0.5000325441360474,
      "encoded_var": 0.25
    }
  },
  {
    "settings": {
      "model_id": "turboae-approximated-nonsys_basic_2022-01-05.18-10-02",
      "block_len": 100,
      "batch_size": 10000,
      "write_results_to_log": true,
      "logdir": "./test_logs/",
      "tzname": "America/Chicago",
      "write_to_tensorboard": true,
      "tensorboard_dir": "./tensorboard/testing/",
      "verbose": 1
    },
    "encoder_decoder": {
      "noninterleaved_code": {
        "trellis": {
          "state_transitions": {
            "next_states": [
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15],
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15]
            ],
            "previous_states": [
              [[0, 0], [8, 0]],
              [[0, 1], [8, 1]],
              [[1, 0], [9, 0]],
              [[1, 1], [9, 1]],
              [[2, 0], [10, 0]],
              [[2, 1], [10, 1]],
              [[3, 0], [11, 0]],
              [[3, 1], [11, 1]],
              [[4, 0], [12, 0]],
              [[4, 1], [12, 1]],
              [[5, 0], [13, 0]],
              [[5, 1], [13, 1]],
              [[6, 0], [14, 0]],
              [[6, 1], [14, 1]],
              [[7, 0], [15, 0]],
              [[7, 1], [15, 1]]
            ]
          },
          "output_table": [
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]],
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]],
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]]
          ]
        },
        "num_states": 16,
        "num_inputs": 2,
        "num_input_channels": 1,
        "num_output_channels": 2,
        "normalize_output_table": false,
        "name": "AffineConvolutionalCode"
      },
      "interleaved_code": {
        "trellis": {
          "state_transitions": {
            "next_states": [
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15],
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15]
            ],
            "previous_states": [
              [[0, 0], [8, 0]],
              [[0, 1], [8, 1]],
              [[1, 0], [9, 0]],
              [[1, 1], [9, 1]],
              [[2, 0], [10, 0]],
              [[2, 1], [10, 1]],
              [[3, 0], [11, 0]],
              [[3, 1], [11, 1]],
              [[4, 0], [12, 0]],
              [[4, 1], [12, 1]],
              [[5, 0], [13, 0]],
              [[5, 1], [13, 1]],
              [[6, 0], [14, 0]],
              [[6, 1], [14, 1]],
              [[7, 0], [15, 0]],
              [[7, 1], [15, 1]]
            ]
          },
          "output_table": [
            [[1], [0]],
            [[0], [1]],
            [[0], [1]],
            [[1], [0]],
            [[0], [1]],
            [[1], [0]],
            [[1], [0]],
            [[0], [1]],
            [[1], [0]],
            [[0], [1]],
            [[0], [1]],
            [[1], [0]],
            [[0], [1]],
            [[1], [0]],
            [[1], [0]],
            [[0], [1]]
          ]
        },
        "num_states": 16,
        "num_inputs": 2,
        "num_input_channels": 1,
        "num_output_channels": 1,
        "normalize_output_table": false,
        "name": "AffineConvolutionalCode"
      },
      "interleaver": {"block_len": 100, "name": "RandomPermuteInterleaver"},
      "channel": {
        "sigma": 0.7943282347242815,
        "good_sigma": 0.7079457843841379,
        "bad_sigma": 0.8912509381337456,
        "snr": 1.9999999999999998,
        "good_snr": 3,
        "bad_snr": 0.9999999999999998,
        "p_gb": 0.8,
        "p_bg": 0.8,
        "block_len": 100,
        "name": "NonIIDMarkovianGaussianAsAWGN"
      },
      "decoder": {
        "decoder1": {
          "trellis_code": {
            "trellis": {
              "state_transitions": {
                "next_states": [
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15],
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15]
                ],
                "previous_states": [
                  [[0, 0], [8, 0]],
                  [[0, 1], [8, 1]],
                  [[1, 0], [9, 0]],
                  [[1, 1], [9, 1]],
                  [[2, 0], [10, 0]],
                  [[2, 1], [10, 1]],
                  [[3, 0], [11, 0]],
                  [[3, 1], [11, 1]],
                  [[4, 0], [12, 0]],
                  [[4, 1], [12, 1]],
                  [[5, 0], [13, 0]],
                  [[5, 1], [13, 1]],
                  [[6, 0], [14, 0]],
                  [[6, 1], [14, 1]],
                  [[7, 0], [15, 0]],
                  [[7, 1], [15, 1]]
                ]
              },
              "output_table": [
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]],
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]],
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]]
              ]
            },
            "num_states": 16,
            "num_inputs": 2,
            "num_input_channels": 1,
            "num_output_channels": 2,
            "normalize_output_table": false,
            "name": "AffineConvolutionalCode"
          },
          "channel": {
            "sigma": 0.7943282347242815,
            "good_sigma": 0.7079457843841379,
            "bad_sigma": 0.8912509381337456,
            "snr": 1.9999999999999998,
            "good_snr": 3,
            "bad_snr": 0.9999999999999998,
            "p_gb": 0.8,
            "p_bg": 0.8,
            "block_len": 100,
            "name": "NonIIDMarkovianGaussianAsAWGN"
          },
          "use_max": false,
          "num_input_channels": 2,
          "num_output_channels": 1,
          "name": "BCJRDecoder"
        },
        "decoder2": {
          "trellis_code": {
            "trellis": {
              "state_transitions": {
                "next_states": [
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15],
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15]
                ],
                "previous_states": [
                  [[0, 0], [8, 0]],
                  [[0, 1], [8, 1]],
                  [[1, 0], [9, 0]],
                  [[1, 1], [9, 1]],
                  [[2, 0], [10, 0]],
                  [[2, 1], [10, 1]],
                  [[3, 0], [11, 0]],
                  [[3, 1], [11, 1]],
                  [[4, 0], [12, 0]],
                  [[4, 1], [12, 1]],
                  [[5, 0], [13, 0]],
                  [[5, 1], [13, 1]],
                  [[6, 0], [14, 0]],
                  [[6, 1], [14, 1]],
                  [[7, 0], [15, 0]],
                  [[7, 1], [15, 1]]
                ]
              },
              "output_table": [
                [[1], [0]],
                [[0], [1]],
                [[0], [1]],
                [[1], [0]],
                [[0], [1]],
                [[1], [0]],
                [[1], [0]],
                [[0], [1]],
                [[1], [0]],
                [[0], [1]],
                [[0], [1]],
                [[1], [0]],
                [[0], [1]],
                [[1], [0]],
                [[1], [0]],
                [[0], [1]]
              ]
            },
            "num_states": 16,
            "num_inputs": 2,
            "num_input_channels": 1,
            "num_output_channels": 1,
            "normalize_output_table": false,
            "name": "AffineConvolutionalCode"
          },
          "channel": {
            "sigma": 0.7943282347242815,
            "good_sigma": 0.7079457843841379,
            "bad_sigma": 0.8912509381337456,
            "snr": 1.9999999999999998,
            "good_snr": 3,
            "bad_snr": 0.9999999999999998,
            "p_gb": 0.8,
            "p_bg": 0.8,
            "block_len": 100,
            "name": "NonIIDMarkovianGaussianAsAWGN"
          },
          "use_max": false,
          "num_input_channels": 1,
          "num_output_channels": 1,
          "name": "BCJRDecoder"
        },
        "interleaver": {"block_len": 100, "name": "RandomPermuteInterleaver"},
        "num_iter": 6,
        "num_noninterleaved_streams": 2,
        "num_input_channels": 3,
        "num_output_channels": 1,
        "name": "TurboDecoder"
      },
      "rate": [1, 3],
      "block_len": 100,
      "use_max": false,
      "num_iter": 6,
      "name": "turboae-approximated-nonsys_basic"
    },
    "steps": 100,
    "scores": {
      "ber_mean": 0.00006311999459285289,
      "ber_var": 0.000001172817064798437,
      "bler_mean": 0.004326000344008207,
      "bler_var": 0.004307289142161608,
      "cross_entropy_mean": 0.00039742590161040425,
      "cross_entropy_var": 0.00491650914773345,
      "encoded_mean": 0.49998989701271057,
      "encoded_var": 0.25
    }
  },
  {
    "settings": {
      "model_id": "turboae-approximated-nonsys_basic_2022-01-05.18-10-02",
      "block_len": 100,
      "batch_size": 10000,
      "write_results_to_log": true,
      "logdir": "./test_logs/",
      "tzname": "America/Chicago",
      "write_to_tensorboard": true,
      "tensorboard_dir": "./tensorboard/testing/",
      "verbose": 1
    },
    "encoder_decoder": {
      "noninterleaved_code": {
        "trellis": {
          "state_transitions": {
            "next_states": [
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15],
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15]
            ],
            "previous_states": [
              [[0, 0], [8, 0]],
              [[0, 1], [8, 1]],
              [[1, 0], [9, 0]],
              [[1, 1], [9, 1]],
              [[2, 0], [10, 0]],
              [[2, 1], [10, 1]],
              [[3, 0], [11, 0]],
              [[3, 1], [11, 1]],
              [[4, 0], [12, 0]],
              [[4, 1], [12, 1]],
              [[5, 0], [13, 0]],
              [[5, 1], [13, 1]],
              [[6, 0], [14, 0]],
              [[6, 1], [14, 1]],
              [[7, 0], [15, 0]],
              [[7, 1], [15, 1]]
            ]
          },
          "output_table": [
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]],
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]],
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]]
          ]
        },
        "num_states": 16,
        "num_inputs": 2,
        "num_input_channels": 1,
        "num_output_channels": 2,
        "normalize_output_table": false,
        "name": "AffineConvolutionalCode"
      },
      "interleaved_code": {
        "trellis": {
          "state_transitions": {
            "next_states": [
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15],
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15]
            ],
            "previous_states": [
              [[0, 0], [8, 0]],
              [[0, 1], [8, 1]],
              [[1, 0], [9, 0]],
              [[1, 1], [9, 1]],
              [[2, 0], [10, 0]],
              [[2, 1], [10, 1]],
              [[3, 0], [11, 0]],
              [[3, 1], [11, 1]],
              [[4, 0], [12, 0]],
              [[4, 1], [12, 1]],
              [[5, 0], [13, 0]],
              [[5, 1], [13, 1]],
              [[6, 0], [14, 0]],
              [[6, 1], [14, 1]],
              [[7, 0], [15, 0]],
              [[7, 1], [15, 1]]
            ]
          },
          "output_table": [
            [[1], [0]],
            [[0], [1]],
            [[0], [1]],
            [[1], [0]],
            [[0], [1]],
            [[1], [0]],
            [[1], [0]],
            [[0], [1]],
            [[1], [0]],
            [[0], [1]],
            [[0], [1]],
            [[1], [0]],
            [[0], [1]],
            [[1], [0]],
            [[1], [0]],
            [[0], [1]]
          ]
        },
        "num_states": 16,
        "num_inputs": 2,
        "num_input_channels": 1,
        "num_output_channels": 1,
        "normalize_output_table": false,
        "name": "AffineConvolutionalCode"
      },
      "interleaver": {"block_len": 100, "name": "RandomPermuteInterleaver"},
      "channel": {
        "sigma": 0.7498942093324559,
        "good_sigma": 0.6683439175686147,
        "bad_sigma": 0.8413951416451951,
        "snr": 2.499999999999999,
        "good_snr": 3.499999999999999,
        "bad_snr": 1.4999999999999991,
        "p_gb": 0.8,
        "p_bg": 0.8,
        "block_len": 100,
        "name": "NonIIDMarkovianGaussianAsAWGN"
      },
      "decoder": {
        "decoder1": {
          "trellis_code": {
            "trellis": {
              "state_transitions": {
                "next_states": [
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15],
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15]
                ],
                "previous_states": [
                  [[0, 0], [8, 0]],
                  [[0, 1], [8, 1]],
                  [[1, 0], [9, 0]],
                  [[1, 1], [9, 1]],
                  [[2, 0], [10, 0]],
                  [[2, 1], [10, 1]],
                  [[3, 0], [11, 0]],
                  [[3, 1], [11, 1]],
                  [[4, 0], [12, 0]],
                  [[4, 1], [12, 1]],
                  [[5, 0], [13, 0]],
                  [[5, 1], [13, 1]],
                  [[6, 0], [14, 0]],
                  [[6, 1], [14, 1]],
                  [[7, 0], [15, 0]],
                  [[7, 1], [15, 1]]
                ]
              },
              "output_table": [
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]],
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]],
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]]
              ]
            },
            "num_states": 16,
            "num_inputs": 2,
            "num_input_channels": 1,
            "num_output_channels": 2,
            "normalize_output_table": false,
            "name": "AffineConvolutionalCode"
          },
          "channel": {
            "sigma": 0.7498942093324559,
            "good_sigma": 0.6683439175686147,
            "bad_sigma": 0.8413951416451951,
            "snr": 2.499999999999999,
            "good_snr": 3.499999999999999,
            "bad_snr": 1.4999999999999991,
            "p_gb": 0.8,
            "p_bg": 0.8,
            "block_len": 100,
            "name": "NonIIDMarkovianGaussianAsAWGN"
          },
          "use_max": false,
          "num_input_channels": 2,
          "num_output_channels": 1,
          "name": "BCJRDecoder"
        },
        "decoder2": {
          "trellis_code": {
            "trellis": {
              "state_transitions": {
                "next_states": [
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15],
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15]
                ],
                "previous_states": [
                  [[0, 0], [8, 0]],
                  [[0, 1], [8, 1]],
                  [[1, 0], [9, 0]],
                  [[1, 1], [9, 1]],
                  [[2, 0], [10, 0]],
                  [[2, 1], [10, 1]],
                  [[3, 0], [11, 0]],
                  [[3, 1], [11, 1]],
                  [[4, 0], [12, 0]],
                  [[4, 1], [12, 1]],
                  [[5, 0], [13, 0]],
                  [[5, 1], [13, 1]],
                  [[6, 0], [14, 0]],
                  [[6, 1], [14, 1]],
                  [[7, 0], [15, 0]],
                  [[7, 1], [15, 1]]
                ]
              },
              "output_table": [
                [[1], [0]],
                [[0], [1]],
                [[0], [1]],
                [[1], [0]],
                [[0], [1]],
                [[1], [0]],
                [[1], [0]],
                [[0], [1]],
                [[1], [0]],
                [[0], [1]],
                [[0], [1]],
                [[1], [0]],
                [[0], [1]],
                [[1], [0]],
                [[1], [0]],
                [[0], [1]]
              ]
            },
            "num_states": 16,
            "num_inputs": 2,
            "num_input_channels": 1,
            "num_output_channels": 1,
            "normalize_output_table": false,
            "name": "AffineConvolutionalCode"
          },
          "channel": {
            "sigma": 0.7498942093324559,
            "good_sigma": 0.6683439175686147,
            "bad_sigma": 0.8413951416451951,
            "snr": 2.499999999999999,
            "good_snr": 3.499999999999999,
            "bad_snr": 1.4999999999999991,
            "p_gb": 0.8,
            "p_bg": 0.8,
            "block_len": 100,
            "name": "NonIIDMarkovianGaussianAsAWGN"
          },
          "use_max": false,
          "num_input_channels": 1,
          "num_output_channels": 1,
          "name": "BCJRDecoder"
        },
        "interleaver": {"block_len": 100, "name": "RandomPermuteInterleaver"},
        "num_iter": 6,
        "num_noninterleaved_streams": 2,
        "num_input_channels": 3,
        "num_output_channels": 1,
        "name": "TurboDecoder"
      },
      "rate": [1, 3],
      "block_len": 100,
      "use_max": false,
      "num_iter": 6,
      "name": "turboae-approximated-nonsys_basic"
    },
    "steps": 100,
    "scores": {
      "ber_mean": 0.000028129996280767955,
      "ber_var": 4.6250912077994144e-7,
      "bler_mean": 0.0020509990863502026,
      "bler_var": 0.0020467955619096756,
      "cross_entropy_mean": 0.00018374749924987555,
      "cross_entropy_var": 0.002603050321340561,
      "encoded_mean": 0.5000327825546265,
      "encoded_var": 0.25
    }
  },
  {
    "settings": {
      "model_id": "turboae-approximated-nonsys_basic_2022-01-05.18-10-02",
      "block_len": 100,
      "batch_size": 10000,
      "write_results_to_log": true,
      "logdir": "./test_logs/",
      "tzname": "America/Chicago",
      "write_to_tensorboard": true,
      "tensorboard_dir": "./tensorboard/testing/",
      "verbose": 1
    },
    "encoder_decoder": {
      "noninterleaved_code": {
        "trellis": {
          "state_transitions": {
            "next_states": [
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15],
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15]
            ],
            "previous_states": [
              [[0, 0], [8, 0]],
              [[0, 1], [8, 1]],
              [[1, 0], [9, 0]],
              [[1, 1], [9, 1]],
              [[2, 0], [10, 0]],
              [[2, 1], [10, 1]],
              [[3, 0], [11, 0]],
              [[3, 1], [11, 1]],
              [[4, 0], [12, 0]],
              [[4, 1], [12, 1]],
              [[5, 0], [13, 0]],
              [[5, 1], [13, 1]],
              [[6, 0], [14, 0]],
              [[6, 1], [14, 1]],
              [[7, 0], [15, 0]],
              [[7, 1], [15, 1]]
            ]
          },
          "output_table": [
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]],
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]],
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[1, 0], [0, 1]],
            [[0, 0], [1, 1]],
            [[0, 1], [1, 0]],
            [[1, 1], [0, 0]]
          ]
        },
        "num_states": 16,
        "num_inputs": 2,
        "num_input_channels": 1,
        "num_output_channels": 2,
        "normalize_output_table": false,
        "name": "AffineConvolutionalCode"
      },
      "interleaved_code": {
        "trellis": {
          "state_transitions": {
            "next_states": [
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15],
              [0, 1],
              [2, 3],
              [4, 5],
              [6, 7],
              [8, 9],
              [10, 11],
              [12, 13],
              [14, 15]
            ],
            "previous_states": [
              [[0, 0], [8, 0]],
              [[0, 1], [8, 1]],
              [[1, 0], [9, 0]],
              [[1, 1], [9, 1]],
              [[2, 0], [10, 0]],
              [[2, 1], [10, 1]],
              [[3, 0], [11, 0]],
              [[3, 1], [11, 1]],
              [[4, 0], [12, 0]],
              [[4, 1], [12, 1]],
              [[5, 0], [13, 0]],
              [[5, 1], [13, 1]],
              [[6, 0], [14, 0]],
              [[6, 1], [14, 1]],
              [[7, 0], [15, 0]],
              [[7, 1], [15, 1]]
            ]
          },
          "output_table": [
            [[1], [0]],
            [[0], [1]],
            [[0], [1]],
            [[1], [0]],
            [[0], [1]],
            [[1], [0]],
            [[1], [0]],
            [[0], [1]],
            [[1], [0]],
            [[0], [1]],
            [[0], [1]],
            [[1], [0]],
            [[0], [1]],
            [[1], [0]],
            [[1], [0]],
            [[0], [1]]
          ]
        },
        "num_states": 16,
        "num_inputs": 2,
        "num_input_channels": 1,
        "num_output_channels": 1,
        "normalize_output_table": false,
        "name": "AffineConvolutionalCode"
      },
      "interleaver": {"block_len": 100, "name": "RandomPermuteInterleaver"},
      "channel": {
        "sigma": 0.7079457843841379,
        "good_sigma": 0.6309573444801932,
        "bad_sigma": 0.7943282347242814,
        "snr": 3.0000000000000004,
        "good_snr": 4,
        "bad_snr": 2.0000000000000004,
        "p_gb": 0.8,
        "p_bg": 0.8,
        "block_len": 100,
        "name": "NonIIDMarkovianGaussianAsAWGN"
      },
      "decoder": {
        "decoder1": {
          "trellis_code": {
            "trellis": {
              "state_transitions": {
                "next_states": [
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15],
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15]
                ],
                "previous_states": [
                  [[0, 0], [8, 0]],
                  [[0, 1], [8, 1]],
                  [[1, 0], [9, 0]],
                  [[1, 1], [9, 1]],
                  [[2, 0], [10, 0]],
                  [[2, 1], [10, 1]],
                  [[3, 0], [11, 0]],
                  [[3, 1], [11, 1]],
                  [[4, 0], [12, 0]],
                  [[4, 1], [12, 1]],
                  [[5, 0], [13, 0]],
                  [[5, 1], [13, 1]],
                  [[6, 0], [14, 0]],
                  [[6, 1], [14, 1]],
                  [[7, 0], [15, 0]],
                  [[7, 1], [15, 1]]
                ]
              },
              "output_table": [
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]],
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]],
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[1, 0], [0, 1]],
                [[0, 0], [1, 1]],
                [[0, 1], [1, 0]],
                [[1, 1], [0, 0]]
              ]
            },
            "num_states": 16,
            "num_inputs": 2,
            "num_input_channels": 1,
            "num_output_channels": 2,
            "normalize_output_table": false,
            "name": "AffineConvolutionalCode"
          },
          "channel": {
            "sigma": 0.7079457843841379,
            "good_sigma": 0.6309573444801932,
            "bad_sigma": 0.7943282347242814,
            "snr": 3.0000000000000004,
            "good_snr": 4,
            "bad_snr": 2.0000000000000004,
            "p_gb": 0.8,
            "p_bg": 0.8,
            "block_len": 100,
            "name": "NonIIDMarkovianGaussianAsAWGN"
          },
          "use_max": false,
          "num_input_channels": 2,
          "num_output_channels": 1,
          "name": "BCJRDecoder"
        },
        "decoder2": {
          "trellis_code": {
            "trellis": {
              "state_transitions": {
                "next_states": [
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15],
                  [0, 1],
                  [2, 3],
                  [4, 5],
                  [6, 7],
                  [8, 9],
                  [10, 11],
                  [12, 13],
                  [14, 15]
                ],
                "previous_states": [
                  [[0, 0], [8, 0]],
                  [[0, 1], [8, 1]],
                  [[1, 0], [9, 0]],
                  [[1, 1], [9, 1]],
                  [[2, 0], [10, 0]],
                  [[2, 1], [10, 1]],
                  [[3, 0], [11, 0]],
                  [[3, 1], [11, 1]],
                  [[4, 0], [12, 0]],
                  [[4, 1], [12, 1]],
                  [[5, 0], [13, 0]],
                  [[5, 1], [13, 1]],
                  [[6, 0], [14, 0]],
                  [[6, 1], [14, 1]],
                  [[7, 0], [15, 0]],
                  [[7, 1], [15, 1]]
                ]
              },
              "output_table": [
                [[1], [0]],
                [[0], [1]],
                [[0], [1]],
                [[1], [0]],
                [[0], [1]],
                [[1], [0]],
                [[1], [0]],
                [[0], [1]],
                [[1], [0]],
                [[0], [1]],
                [[0], [1]],
                [[1], [0]],
                [[0], [1]],
                [[1], [0]],
                [[1], [0]],
                [[0], [1]]
              ]
            },
            "num_states": 16,
            "num_inputs": 2,
            "num_input_channels": 1,
            "num_output_channels": 1,
            "normalize_output_table": false,
            "name": "AffineConvolutionalCode"
          },
          "channel": {
            "sigma": 0.7079457843841379,
            "good_sigma": 0.6309573444801932,
            "bad_sigma": 0.7943282347242814,
            "snr": 3.0000000000000004,
            "good_snr": 4,
            "bad_snr": 2.0000000000000004,
            "p_gb": 0.8,
            "p_bg": 0.8,
            "block_len": 100,
            "name": "NonIIDMarkovianGaussianAsAWGN"
          },
          "use_max": false,
          "num_input_channels": 1,
          "num_output_channels": 1,
          "name": "BCJRDecoder"
        },
        "interleaver": {"block_len": 100, "name": "RandomPermuteInterleaver"},
        "num_iter": 6,
        "num_noninterleaved_streams": 2,
        "num_input_channels": 3,
        "num_output_channels": 1,
        "name": "TurboDecoder"
      },
      "rate": [1, 3],
      "block_len": 100,
      "use_max": false,
      "num_iter": 6,
      "name": "turboae-approximated-nonsys_basic"
    },
    "steps": 100,
    "scores": {
      "ber_mean": 0.00001219999830937013,
      "ber_var": 1.9305127807456302e-7,
      "bler_mean": 0.0009179998887702823,
      "bler_var": 0.0009171581477858126,
      "cross_entropy_mean": 0.00007949637074489146,
      "cross_entropy_var": 0.001089478493668139,
      "encoded_mean": 0.4999527037143707,
      "encoded_var": 0.2499999701976776
    }
  }
]